<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>http://myfly.vip/2016/07/25/hello-world/</url>
      <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Finial Project]]></title>
      <url>http://myfly.vip/2016/07/08/SugarFinial/</url>
      <content type="html"><![CDATA[<p><img src="http://i.imgur.com/EwtBSDy.png" alt="slide"><br><a id="more"></a></p>
<h1 id="Finial-Project-introduction"><a href="#Finial-Project-introduction" class="headerlink" title="Finial Project introduction"></a>Finial Project introduction</h1><p>I had changed finial project twice for a more funny project<br>My Evaluate project is Sugar Timer.</p>
<p>Sugar Timeris design for children ,adult can also use it, like me<br>I want make something can encourage me to work hard and study hard.<br>so I try to make a counter which can supervise you studying and working.<br>After you work for a while ,you will get a candy as a reward  </p>
<p>I also do some research about it<br>I use the <a href="https://www.leanstartupmachine.com/validationboard/" target="_blank" rel="external">Validationboard</a>,and I think it’s useful.<br><img src="http://i.imgur.com/GJMabkq.jpg" alt="SugarTimer.001"></p>
<p>Then,I draw some sketch<br><img src="http://i.imgur.com/ELHo6Le.jpg" alt="SugarTimer.002"><br><img src="http://i.imgur.com/YwZTLyw.jpg" alt="SugarTimer.003"></p>
<h2 id="The-Plan"><a href="#The-Plan" class="headerlink" title="The Plan"></a>The Plan</h2><p>June 5~6th - Electronic design<br>June 7~10th - Electronic test and programm<br>June 11~18th - Struct design and test<br>June 19~20 - Assembling<br>June 20th - Finial testing and debugging<br>June 21th - Slide &amp; video</p>
<h2 id="Electronic-design"><a href="#Electronic-design" class="headerlink" title="Electronic design"></a>Electronic design</h2><h3 id="Draw-the-Schematic"><a href="#Draw-the-Schematic" class="headerlink" title="Draw the Schematic"></a>Draw the Schematic</h3><p><img src="http://i.imgur.com/Vz0FMTt.jpg" alt=""></p>
<h3 id="Layout-the-PCB-Board"><a href="#Layout-the-PCB-Board" class="headerlink" title="Layout the PCB Board"></a>Layout the PCB Board</h3><p><img src="http://i.imgur.com/4yOGqwe.jpg" alt=""></p>
<h3 id="Output-to-Roland-machine-and-mill-the-board"><a href="#Output-to-Roland-machine-and-mill-the-board" class="headerlink" title="Output to Roland machine and mill the board"></a>Output to Roland machine and mill the board</h3><p><img src="http://i.imgur.com/h1gf1lY.jpg" alt=""></p>
<h3 id="Soldering-the-board-and-connect-with-wire"><a href="#Soldering-the-board-and-connect-with-wire" class="headerlink" title="Soldering the board and connect with wire"></a>Soldering the board and connect with wire</h3><p><img src="http://i.imgur.com/pQYoueS.jpg" alt=""></p>
<h2 id="Electronic-test-and-programm"><a href="#Electronic-test-and-programm" class="headerlink" title="Electronic test and programm"></a>Electronic test and programm</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div></pre></td><td class="code"><pre><div class="line">#include &lt;Servo.h&gt;</div><div class="line">#include &lt;Ultrasonic.h&gt;</div><div class="line">#include &lt;Adafruit_NeoPixel.h&gt;</div><div class="line">#ifdef __AVR__</div><div class="line">  #include &lt;avr/power.h&gt;</div><div class="line">#endif</div><div class="line"></div><div class="line">//==============NeoPixels=============</div><div class="line">// Which pin on the Arduino is connected to the NeoPixels?</div><div class="line">// On a Trinket or Gemma we suggest changing this to 1</div><div class="line">#define PIN            6</div><div class="line"></div><div class="line">// How many NeoPixels are attached to the Arduino?</div><div class="line">#define NUMPIXELS      24</div><div class="line"></div><div class="line">#define BRIGHTNESS 5</div><div class="line"></div><div class="line">// When we setup the NeoPixel library, we tell it how many pixels, and which pin to use to send signals.</div><div class="line">// Note that for older NeoPixel strips you might need to change the third parameter--see the strandtest</div><div class="line">// example for more information on possible values.</div><div class="line">Adafruit_NeoPixel pixels = Adafruit_NeoPixel(NUMPIXELS, PIN, NEO_GRB + NEO_KHZ800);</div><div class="line"></div><div class="line">int delayval = 500; // delay for half a second</div><div class="line"></div><div class="line">int ledPoint = 0;</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line">//===========================</div><div class="line"></div><div class="line"></div><div class="line">Servo myservo;  // create servo object to control a servo</div><div class="line">// twelve servo objects can be created on most boards</div><div class="line">int pos = 0;    // variable to store the servo position</div><div class="line"></div><div class="line">Ultrasonic ultrasonic(9,8); // (Trig PIN,Echo PIN)</div><div class="line">int distance;</div><div class="line"></div><div class="line">void setup() &#123;</div><div class="line">  myservo.attach(10);  // attaches the servo on pin 9 to the servo object</div><div class="line">  Serial.begin(9600);</div><div class="line"></div><div class="line">  pixels.begin(); // This initializes the NeoPixel library.</div><div class="line">  pixels.setBrightness(BRIGHTNESS);</div><div class="line">  pinMode(13,OUTPUT);</div><div class="line">&#125;</div><div class="line"></div><div class="line">void loop() &#123;</div><div class="line">  distance = ultrasonic.Ranging(CM);</div><div class="line">  Serial.print(distance); // CM or INC</div><div class="line">  Serial.println(&quot; cm&quot; );</div><div class="line">  if(distance&lt;50)&#123;</div><div class="line">    distance = ultrasonic.Ranging(CM);</div><div class="line">    if(distance&lt;50)&#123;</div><div class="line">      if(ledPoint&lt;=24)&#123;</div><div class="line">        ledPoint++;</div><div class="line">        pixels.setPixelColor(ledPoint,255, 255, 255);</div><div class="line">      &#125;else&#123;</div><div class="line">        ledPoint = 0;</div><div class="line">        sweepOut();</div><div class="line">        pixels.clear();</div><div class="line">      &#125;</div><div class="line">    &#125;</div><div class="line">  &#125;else&#123;</div><div class="line">    if(ledPoint&gt;0)&#123;</div><div class="line">      pixels.setPixelColor(ledPoint,0, 0, 0);</div><div class="line">      ledPoint--;</div><div class="line">    &#125;else&#123;</div><div class="line">      ledPoint = -1;</div><div class="line">      pixels.clear();</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">  Serial.print(&quot;LedPoint: &quot;);</div><div class="line">  Serial.println(ledPoint);</div><div class="line">  pixels.show();</div><div class="line">  delay(50);</div><div class="line">&#125;</div><div class="line"></div><div class="line">void sweepOut()&#123;</div><div class="line">  digitalWrite(13,HIGH);</div><div class="line">  myservo.write(30);</div><div class="line">  delay(500);</div><div class="line">  myservo.write(180);</div><div class="line">  delay(1000);</div><div class="line">  digitalWrite(13,LOW);</div><div class="line"></div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line">//no use now</div><div class="line">// Fill the dots one after the other with a color</div><div class="line">void colorWipe(uint32_t c, uint8_t wait) &#123;</div><div class="line">  for(uint16_t i=0; i&lt;pixels.numPixels(); i++) &#123;</div><div class="line">    pixels.setPixelColor(i, c);</div><div class="line">    pixels.show();</div><div class="line">    delay(wait);</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="Struct-design-and-test"><a href="#Struct-design-and-test" class="headerlink" title="Struct design and test"></a>Struct design and test</h2><p><img src="http://i.imgur.com/h9ok4NH.jpg" alt=""></p>
<h3 id="Design-process"><a href="#Design-process" class="headerlink" title="Design process"></a>Design process</h3><p><img src="http://i.imgur.com/ljobYyq.gif" alt="StructRecord"></p>
<h3 id="Struct-test"><a href="#Struct-test" class="headerlink" title="Struct test"></a>Struct test</h3><p><img src="http://i.imgur.com/1oC3g50.jpg" alt=""></p>
<h2 id="Assembling"><a href="#Assembling" class="headerlink" title="Assembling"></a>Assembling</h2><p><img src="http://i.imgur.com/48jhgdE.jpg" alt=""></p>
<h2 id="Finial-testing-and-debugging"><a href="#Finial-testing-and-debugging" class="headerlink" title="Finial testing and debugging"></a>Finial testing and debugging</h2><p><img src="http://i.imgur.com/xmnL4Ta.jpg" alt=""></p>
<h2 id="Slide-amp-video"><a href="#Slide-amp-video" class="headerlink" title="Slide &amp; video"></a>Slide &amp; video</h2><p><img src="http://i.imgur.com/EwtBSDy.png" alt="slide"><br><div class="video-container"><iframe src="//player.vimeo.com/video/173801401" frameborder="0" allowfullscreen></iframe></div></p>
<h2 id="Summarise"><a href="#Summarise" class="headerlink" title="Summarise"></a>Summarise</h2><p>Before I join the fabacademy,I just know how to programm and design PCB board.<br>But now, I can design 2D and 3D files,and make it real,but there is still a long way for me to make almost anything.</p>
<h2 id="File-Download"><a href="#File-Download" class="headerlink" title="File Download"></a>File Download</h2><p><a href="http://archive.fabacademy.org/archives/2016/fablabshenzhen/students/426/1download/sugarTimer.zip" target="_blank" rel="external">eagle</a><br><a href="http://archive.fabacademy.org/archives/2016/fablabshenzhen/students/426/1download/finial3D.zip" target="_blank" rel="external">3D.stl</a></p>
<p><img src="http://i.imgur.com/AO9FQlB.png" alt=""><br>This work is licensed under a <a href="http://creativecommons.org/licenses/by/4.0/" target="_blank" rel="external">Creative Commons Attribution 4.0 International License</a>.</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Contents]]></title>
      <url>http://myfly.vip/2016/06/21/Contents/</url>
      <content type="html"><![CDATA[<p><a href="http://archive.fabacademy.org/archives/2016/fablabshenzhen/students/426/2016/01/27/Week1/" target="_blank" rel="external">Week 1 - principles and practices, project management (Jan 27)</a></p>
<ul>
<li><a href="http://archive.fabacademy.org/archives/2016/fablabshenzhen/students/426/2015/01/27/About-Me/" target="_blank" rel="external">About Me</a></li>
<li><a href="http://archive.fabacademy.org/archives/2016/fablabshenzhen/students/426/2016/01/27/Make-a-website-with-Hexo/" target="_blank" rel="external">Make a website with Hexo</a></li>
<li><a href="http://archive.fabacademy.org/archives/2016/fablabshenzhen/students/426/2016/01/27/Push-to-the-GitLab/" target="_blank" rel="external">Push to the GitLab</a></li>
<li><a href="http://archive.fabacademy.org/archives/2016/fablabshenzhen/students/426/2016/01/27/SugarTimerIntro/" target="_blank" rel="external">My Final Project - Sugar Timer</a></li>
<li><a href="http://archive.fabacademy.org/archives/2016/fablabshenzhen/students/426/2016/01/27/midicube/" target="_blank" rel="external">My Final Project - MIDI Cube(Delay)</a></li>
<li><a href="http://archive.fabacademy.org/archives/2016/fablabshenzhen/students/426/2016/01/27/My-Final-Project/" target="_blank" rel="external">My Final Project - MIDI Reactor(Expired)</a></li>
</ul>
<p><a href="http://archive.fabacademy.org/archives/2016/fablabshenzhen/students/426/2016/02/03/Week-2/" target="_blank" rel="external">Week 2 - computer-aided design (Feb 3)</a></p>
<ul>
<li><a href="http://archive.fabacademy.org/archives/2016/fablabshenzhen/students/426/2016/02/03/Sketch-a-prototype-with-GIMP/" target="_blank" rel="external">Sketch a prototype with GIMP</a></li>
<li><a href="http://archive.fabacademy.org/archives/2016/fablabshenzhen/students/426/2016/02/03/sketchup/" target="_blank" rel="external">Sketch with Sketchup</a></li>
</ul>
<p><a href="http://archive.fabacademy.org/archives/2016/fablabshenzhen/students/426/2016/02/10/Week3/" target="_blank" rel="external">Week 3 - computer-controlled cutting (Feb 10)</a></p>
<ul>
<li><a href="http://archive.fabacademy.org/archives/2016/fablabshenzhen/students/426/2016/02/10/Cut-and-assemb-an-acrylic-ornament/" target="_blank" rel="external">Cut and assemb an acrylic ornament</a></li>
<li><a href="http://archive.fabacademy.org/archives/2016/fablabshenzhen/students/426/2016/02/10/papercube/" target="_blank" rel="external">Paper Cube</a></li>
<li><a href="http://archive.fabacademy.org/archives/2016/fablabshenzhen/students/426/2016/02/10/vinyl/" target="_blank" rel="external">Vinyl Cutter</a></li>
</ul>
<p><a href="http://archive.fabacademy.org/archives/2016/fablabshenzhen/students/426/2016/02/17/Week4/" target="_blank" rel="external">Week 4 - electronics production (Feb 17)</a></p>
<ul>
<li><a href="http://archive.fabacademy.org/archives/2016/fablabshenzhen/students/426/2016/02/17/boardmilling/" target="_blank" rel="external">Board Milling and fabisp</a></li>
<li><a href="http://archive.fabacademy.org/archives/2016/fablabshenzhen/students/426/2016/02/17/Use-an-Arduino-to-make-my-first-Fabisp/" target="_blank" rel="external">Use an Arduino to make my first Fabisp</a></li>
</ul>
<p><a href="http://archive.fabacademy.org/archives/2016/fablabshenzhen/students/426/2016/02/24/Week5/" target="_blank" rel="external">Week 5 - 3D scanning and printing (Feb 24)</a></p>
<ul>
<li><a href="http://archive.fabacademy.org/archives/2016/fablabshenzhen/students/426/2016/02/24/3D-Printer/" target="_blank" rel="external">3D Printer</a></li>
<li><a href="http://archive.fabacademy.org/archives/2016/fablabshenzhen/students/426/2016/02/24/3D-Scanner/" target="_blank" rel="external">3D Scanner</a></li>
</ul>
<p><a href="http://archive.fabacademy.org/archives/2016/fablabshenzhen/students/426/2016/03/02/Week6/" target="_blank" rel="external">Week 6 - electronics design (Mar 2)</a></p>
<p><a href="http://archive.fabacademy.org/archives/2016/fablabshenzhen/students/426/2016/03/09/chair/" target="_blank" rel="external">Week 7 - computer-controlled machining (Mar 9)</a></p>
<p> <a href="http://archive.fabacademy.org/archives/2016/fablabshenzhen/students/426/2016/03/16/Week8/" target="_blank" rel="external">Week 8 - embedded programming (Mar 16)</a></p>
<ul>
<li><a href="http://archive.fabacademy.org/archives/2016/fablabshenzhen/students/426/2016/03/16/AVR-Programming/" target="_blank" rel="external">AVR Programming</a></li>
<li>NRF51822 Programming:<a href="http://archive.fabacademy.org/archives/2016/fablabshenzhen/students/426/2016/03/16/nrf51-a1/" target="_blank" rel="external">Blinky</a> <a href="http://archive.fabacademy.org/archives/2016/fablabshenzhen/students/426/2016/03/16/nrf51-a2/" target="_blank" rel="external">System Clock and Delay</a> <a href="http://archive.fabacademy.org/archives/2016/fablabshenzhen/students/426/2016/03/16/nrf51-a3/" target="_blank" rel="external">Key scan</a> <a href="http://archive.fabacademy.org/archives/2016/fablabshenzhen/students/426/2016/03/16/nrf51-a4/" target="_blank" rel="external">Key and Interrupt</a> <a href="http://archive.fabacademy.org/archives/2016/fablabshenzhen/students/426/2016/03/16/nrf51-a5/" target="_blank" rel="external">RTC and Compare</a> <a href="http://archive.fabacademy.org/archives/2016/fablabshenzhen/students/426/2016/03/16/nrf51-a6/" target="_blank" rel="external">Timer</a> <a href="http://archive.fabacademy.org/archives/2016/fablabshenzhen/students/426/2016/03/16/nrf51-a7/" target="_blank" rel="external">UART</a> <a href="http://archive.fabacademy.org/archives/2016/fablabshenzhen/students/426/2016/03/16/nrf51-a8/" target="_blank" rel="external">Temperature</a> <a href="http://archive.fabacademy.org/archives/2016/fablabshenzhen/students/426/2016/03/16/nrf51-a9/" target="_blank" rel="external">PPI</a></li>
</ul>
<p><a href="http://archive.fabacademy.org/archives/2016/fablabshenzhen/students/426/2016/03/30/week9-10/" target="_blank" rel="external">Week 9~10 - mechanical design (Mar 30) and machine design (Apr 6)</a></p>
<p><a href="http://archive.fabacademy.org/archives/2016/fablabshenzhen/students/426/2016/04/13/week11/" target="_blank" rel="external">Week 11 - input devices (Apr 13)</a></p>
<p><a href="http://archive.fabacademy.org/archives/2016/fablabshenzhen/students/426/2016/04/20/week12/" target="_blank" rel="external">Week 12 - molding and casting (Apr 20)</a></p>
<p><a href="http://archive.fabacademy.org/archives/2016/fablabshenzhen/students/426/2016/04/27/Week13/" target="_blank" rel="external">Week 13 - output devices (Apr 27)</a></p>
<ul>
<li><a href="http://archive.fabacademy.org/archives/2016/fablabshenzhen/students/426/2016/04/27/Week13-RGB/" target="_blank" rel="external">RGB Controller
</a></li>
<li><a href="http://archive.fabacademy.org/archives/2016/fablabshenzhen/students/426/2016/04/27/Week13-Speaker-Motor/" target="_blank" rel="external">Replace the microcontroller of the Toy(Motor and Speaker)</a></li>
</ul>
<p><a href="http://archive.fabacademy.org/archives/2016/fablabshenzhen/students/426/2016/05/04/Week14/" target="_blank" rel="external">Week 14 - composites (May 4)</a></p>
<p><a href="http://archive.fabacademy.org/archives/2016/fablabshenzhen/students/426/2016/05/11/Week15/" target="_blank" rel="external">Week 15 - networking and communications (May 11)</a></p>
<ul>
<li><a href="http://archive.fabacademy.org/archives/2016/fablabshenzhen/students/426/2016/05/11/Week15-Bridge-node-I2C/" target="_blank" rel="external">Tiny45 I2C</a></li>
<li><a href="http://archive.fabacademy.org/archives/2016/fablabshenzhen/students/426/2016/05/11/Week15-RTC-I2C/" target="_blank" rel="external">RTC I2C Module</a></li>
</ul>
<p><a href="http://archive.fabacademy.org/archives/2016/fablabshenzhen/students/426/2016/05/18/Week16/" target="_blank" rel="external">Week 16 - interface and application programming (May 18)</a></p>
<p><a href="http://archive.fabacademy.org/archives/2016/fablabshenzhen/students/426/2016/05/25/Week17/" target="_blank" rel="external">Week 17 - applications and implications (May 25)</a></p>
<p><a href="http://archive.fabacademy.org/archives/2016/fablabshenzhen/students/426/2016/06/02/Week18/" target="_blank" rel="external">Week 18 - invention, intellectual property, and income (Jun 1)</a><br><a href="http://archive.fabacademy.org/archives/2016/fablabshenzhen/students/426/2016/06/20/Week19/" target="_blank" rel="external">Week 19 - Project Development (Jun 8)</a></p>
<p><a href="http://archive.fabacademy.org/archives/2016/fablabshenzhen/students/426/2016/07/08/SugarFinial" target="_blank" rel="external">Finial Project</a></p>
<p><img src="http://i.imgur.com/AO9FQlB.png" alt=""><br>This work is licensed under a <a href="http://creativecommons.org/licenses/by/4.0/" target="_blank" rel="external">Creative Commons Attribution 4.0 International License</a>.</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Week19]]></title>
      <url>http://myfly.vip/2016/06/20/Week19/</url>
      <content type="html"><![CDATA[<h1 id="Answer"><a href="#Answer" class="headerlink" title="Answer"></a>Answer</h1><p>  complete your final project, tracking your progress:<br><a id="more"></a></p>
<h2 id="what-tasks-have-been-completed-and-what-tasks-remain"><a href="#what-tasks-have-been-completed-and-what-tasks-remain" class="headerlink" title="what tasks have been completed, and what tasks remain?"></a>what tasks have been completed, and what tasks remain?</h2><pre><code>I have finished the ID design,painting,3D printer,Soldering and Programme
I&apos;m still working on Wifi connection.
</code></pre><h2 id="what-has-worked-what-hasn’t"><a href="#what-has-worked-what-hasn’t" class="headerlink" title="what has worked? what hasn’t?"></a>what has worked? what hasn’t?</h2><pre><code>Most of functions has worked,but I still working on Wifi connection
</code></pre><h2 id="what-questions-need-to-be-resolved"><a href="#what-questions-need-to-be-resolved" class="headerlink" title="what questions need to be resolved?"></a>what questions need to be resolved?</h2><pre><code>The ID is too bad,I need to find someone to desgin a new model.
</code></pre><h2 id="what-will-happen-when"><a href="#what-will-happen-when" class="headerlink" title="what will happen when?"></a>what will happen when?</h2><h3 id="June-5-6th-Electronic-design"><a href="#June-5-6th-Electronic-design" class="headerlink" title="June 5~6th - Electronic design"></a>June 5~6th - Electronic design</h3><p>Draw the Schematic<br><img src="http://i.imgur.com/Vz0FMTt.jpg" alt=""></p>
<p>Layout the PCB Board<br><img src="http://i.imgur.com/4yOGqwe.jpg" alt=""></p>
<p>Output to Roland machine and mill the board<br><img src="http://i.imgur.com/h1gf1lY.jpg" alt=""></p>
<p>Soldering the board and connect with wire<br><img src="http://i.imgur.com/pQYoueS.jpg" alt=""></p>
<h3 id="June-7-10th-Electronic-test-and-programm"><a href="#June-7-10th-Electronic-test-and-programm" class="headerlink" title="June 7~10th - Electronic test and programm"></a>June 7~10th - Electronic test and programm</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div></pre></td><td class="code"><pre><div class="line">#include &lt;Servo.h&gt;</div><div class="line">#include &lt;Ultrasonic.h&gt;</div><div class="line">#include &lt;Adafruit_NeoPixel.h&gt;</div><div class="line">#ifdef __AVR__</div><div class="line">  #include &lt;avr/power.h&gt;</div><div class="line">#endif</div><div class="line"></div><div class="line">//==============NeoPixels=============</div><div class="line">// Which pin on the Arduino is connected to the NeoPixels?</div><div class="line">// On a Trinket or Gemma we suggest changing this to 1</div><div class="line">#define PIN            6</div><div class="line"></div><div class="line">// How many NeoPixels are attached to the Arduino?</div><div class="line">#define NUMPIXELS      24</div><div class="line"></div><div class="line">#define BRIGHTNESS 5</div><div class="line"></div><div class="line">// When we setup the NeoPixel library, we tell it how many pixels, and which pin to use to send signals.</div><div class="line">// Note that for older NeoPixel strips you might need to change the third parameter--see the strandtest</div><div class="line">// example for more information on possible values.</div><div class="line">Adafruit_NeoPixel pixels = Adafruit_NeoPixel(NUMPIXELS, PIN, NEO_GRB + NEO_KHZ800);</div><div class="line"></div><div class="line">int delayval = 500; // delay for half a second</div><div class="line"></div><div class="line">int ledPoint = 0;</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line">//===========================</div><div class="line"></div><div class="line"></div><div class="line">Servo myservo;  // create servo object to control a servo</div><div class="line">// twelve servo objects can be created on most boards</div><div class="line">int pos = 0;    // variable to store the servo position</div><div class="line"></div><div class="line">Ultrasonic ultrasonic(9,8); // (Trig PIN,Echo PIN)</div><div class="line">int distance;</div><div class="line"></div><div class="line">void setup() &#123;</div><div class="line">  myservo.attach(10);  // attaches the servo on pin 9 to the servo object</div><div class="line">  Serial.begin(9600);</div><div class="line"></div><div class="line">  pixels.begin(); // This initializes the NeoPixel library.</div><div class="line">  pixels.setBrightness(BRIGHTNESS);</div><div class="line">  pinMode(13,OUTPUT);</div><div class="line">&#125;</div><div class="line"></div><div class="line">void loop() &#123;</div><div class="line">  distance = ultrasonic.Ranging(CM);</div><div class="line">  Serial.print(distance); // CM or INC</div><div class="line">  Serial.println(&quot; cm&quot; );</div><div class="line">  if(distance&lt;50)&#123;</div><div class="line">    distance = ultrasonic.Ranging(CM);</div><div class="line">    if(distance&lt;50)&#123;</div><div class="line">      if(ledPoint&lt;=24)&#123;</div><div class="line">        ledPoint++;</div><div class="line">        pixels.setPixelColor(ledPoint,255, 255, 255);</div><div class="line">      &#125;else&#123;</div><div class="line">        ledPoint = 0;</div><div class="line">        sweepOut();</div><div class="line">        pixels.clear();</div><div class="line">      &#125;</div><div class="line">    &#125;</div><div class="line">  &#125;else&#123;</div><div class="line">    if(ledPoint&gt;0)&#123;</div><div class="line">      pixels.setPixelColor(ledPoint,0, 0, 0);</div><div class="line">      ledPoint--;</div><div class="line">    &#125;else&#123;</div><div class="line">      ledPoint = -1;</div><div class="line">      pixels.clear();</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">  Serial.print(&quot;LedPoint: &quot;);</div><div class="line">  Serial.println(ledPoint);</div><div class="line">  pixels.show();</div><div class="line">  delay(50);</div><div class="line">&#125;</div><div class="line"></div><div class="line">void sweepOut()&#123;</div><div class="line">  digitalWrite(13,HIGH);</div><div class="line">  myservo.write(30);</div><div class="line">  delay(500);</div><div class="line">  myservo.write(180);</div><div class="line">  delay(1000);</div><div class="line">  digitalWrite(13,LOW);</div><div class="line"></div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line">//no use now</div><div class="line">// Fill the dots one after the other with a color</div><div class="line">void colorWipe(uint32_t c, uint8_t wait) &#123;</div><div class="line">  for(uint16_t i=0; i&lt;pixels.numPixels(); i++) &#123;</div><div class="line">    pixels.setPixelColor(i, c);</div><div class="line">    pixels.show();</div><div class="line">    delay(wait);</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="June-11-18th-Struct-design-and-test"><a href="#June-11-18th-Struct-design-and-test" class="headerlink" title="June 11~18th - Struct design and test"></a>June 11~18th - Struct design and test</h3><p><img src="http://i.imgur.com/h9ok4NH.jpg" alt=""></p>
<h4 id="Design-process"><a href="#Design-process" class="headerlink" title="Design process"></a>Design process</h4><p><img src="http://i.imgur.com/ljobYyq.gif" alt="StructRecord"></p>
<h4 id="Struct-test"><a href="#Struct-test" class="headerlink" title="Struct test"></a>Struct test</h4><p><img src="http://i.imgur.com/1oC3g50.jpg" alt=""></p>
<h3 id="June-19-20-assembling"><a href="#June-19-20-assembling" class="headerlink" title="June 19~20 - assembling"></a>June 19~20 - assembling</h3><p><img src="http://i.imgur.com/48jhgdE.jpg" alt=""></p>
<h3 id="June19-21th-Finial-testing-and-debugging"><a href="#June19-21th-Finial-testing-and-debugging" class="headerlink" title="June19~21th - Finial testing and debugging"></a>June19~21th - Finial testing and debugging</h3><p><img src="http://i.imgur.com/xmnL4Ta.jpg" alt=""></p>
<h2 id="what-have-you-learned"><a href="#what-have-you-learned" class="headerlink" title="what have you learned?"></a>what have you learned?</h2><p>  Before I join the fabacademy,I just know how to programm and design PCB board.<br>But now, I can design 2D and 3D files,and make it real,but there is still a long way for me to make almost anything.</p>
<p><img src="http://i.imgur.com/AO9FQlB.png" alt=""><br>This work is licensed under a <a href="http://creativecommons.org/licenses/by/4.0/" target="_blank" rel="external">Creative Commons Attribution 4.0 International License</a>.</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Week18 - Invention, Intellectual Property, and Income]]></title>
      <url>http://myfly.vip/2016/06/02/Week18/</url>
      <content type="html"><![CDATA[<h2 id="Dissemination-and-Income"><a href="#Dissemination-and-Income" class="headerlink" title="Dissemination and Income"></a>Dissemination and Income</h2><p>I hope it can become a product and launch on kickstarter or other crowdfunding platform.<br>The finial project is just a beginning,it can just put the candy out now.<br>There will many features in future,such as connect to internet ,you can see how mamy candy you had eat today and recorded it.<br>When the candies almost gave out,it will give a notice to you…<br>I still exploring the features.<br><a id="more"></a></p>
<h2 id="Intellectual-Property"><a href="#Intellectual-Property" class="headerlink" title="Intellectual Property"></a>Intellectual Property</h2><p>There so many property licenses for me to choose,but I was interseted in MIT License and CC,so I do some research about the two licenses</p>
<p>This is <a href="https://mit-license.org/" target="_blank" rel="external">The MIT License (MIT)</a> introduction,<br><img src="http://i.imgur.com/Pawqv1i.jpg" alt=""><br>It has a long text to explain the license.</p>
<p>This <a href="https://creativecommons.org/" target="_blank" rel="external">Creative Commons</a> introduction,<br><img src="http://i.imgur.com/JHNnI0G.jpg" alt=""><br>You can put the license’s logo on you projects,it’s convenience.</p>
<p>I choose the CC License because I like the <a href="https://creativecommons.org/choose/" target="_blank" rel="external">tool</a> to create the License.<br><img src="http://i.imgur.com/sn8IZfL.jpg" alt=""></p>
<p><img src="http://i.imgur.com/AO9FQlB.png" alt=""></p>
<p>This work is licensed under a <a href="http://creativecommons.org/licenses/by/4.0/" target="_blank" rel="external">Creative Commons Attribution 4.0 International License</a>.</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Week17]]></title>
      <url>http://myfly.vip/2016/05/25/Week17/</url>
      <content type="html"><![CDATA[<h1 id="Applications-and-Implications"><a href="#Applications-and-Implications" class="headerlink" title="Applications and Implications"></a><a href="http://archive.fabacademy.org/archives/2016/fablabshenzhen/students/426/2016/05/25/Week17/" target="_blank" rel="external">Applications and Implications</a></h1><a id="more"></a>
<p>  propose a final project that integrates the range of units covered, answering:</p>
<h2 id="what-will-it-do"><a href="#what-will-it-do" class="headerlink" title="what will it do?"></a>what will it do?</h2><p>This timer is design for children ,adult can also use it, like me<br>I want make something can encourage me to work hard and study hard.<br>so I try to make a counter which can supervise you studying and working.<br>After you work for a while ,you will get a candy as a reward  </p>
<h2 id="who’s-done-what-beforehand"><a href="#who’s-done-what-beforehand" class="headerlink" title="who’s done what beforehand?"></a>who’s done what beforehand?</h2><p>There was many timers but nothing like that.</p>
<h2 id="what-materials-and-components-will-be-required"><a href="#what-materials-and-components-will-be-required" class="headerlink" title="what materials and components will be required?"></a>what materials and components will be required?</h2><ul>
<li>PLA materials and 3D Printer</li>
<li>Sugar,SoartA-clear and SortaB-clear</li>
<li>ATMEGA328P-AU,FR1 Board</li>
<li>Servo,Speaker,LED</li>
</ul>
<h2 id="where-will-they-come-from"><a href="#where-will-they-come-from" class="headerlink" title="where will they come from?"></a>where will they come from?</h2><ul>
<li>Shop，supermarket</li>
<li>Nurtrition Store</li>
<li>Taobao</li>
<li>Kickstarter</li>
</ul>
<h2 id="how-much-will-it-cost"><a href="#how-much-will-it-cost" class="headerlink" title="how much will it cost?"></a>how much will it cost?</h2><p>Below 10 doller。</p>
<h2 id="what-parts-and-systems-will-be-made"><a href="#what-parts-and-systems-will-be-made" class="headerlink" title="what parts and systems will be made?"></a>what parts and systems will be made?</h2><ul>
<li>Output Structure</li>
<li>MicroController</li>
<li>RGB indicator</li>
<li>Ultrasonic meter</li>
</ul>
<h2 id="what-processes-will-be-used"><a href="#what-processes-will-be-used" class="headerlink" title="what processes will be used?"></a>what processes will be used?</h2><ul>
<li>Computer-aided design</li>
<li>3D printing</li>
<li>Electronics production</li>
<li>Electronics design</li>
<li>Embedded programming</li>
<li>Input&amp;Output devices</li>
<li>Networking and communications</li>
<li>Molding and casting(For candies)</li>
</ul>
<h2 id="what-tasks-need-to-be-completed"><a href="#what-tasks-need-to-be-completed" class="headerlink" title="what tasks need to be completed?"></a>what tasks need to be completed?</h2><ul>
<li>ID design and painting</li>
<li>3D printer</li>
<li>Soldering</li>
<li>Programme</li>
</ul>
<h2 id="what-questions-need-to-be-answered"><a href="#what-questions-need-to-be-answered" class="headerlink" title="what questions need to be answered?"></a>what questions need to be answered?</h2><p>How to design the struct?</p>
<h2 id="what-is-the-schedule"><a href="#what-is-the-schedule" class="headerlink" title="what is the schedule?"></a>what is the schedule?</h2><p>June 5~6th - Electronic design<br>June 7~10th - Electronic test and programm<br>June 11~18th - Struct design and test<br>June 19~20 - assembling<br>June19~21th - Finial testing and debugging</p>
<h2 id="how-will-it-be-evaluated"><a href="#how-will-it-be-evaluated" class="headerlink" title="how will it be evaluated?"></a>how will it be evaluated?</h2><p>It can monitor if someone is in front of it,after stand in front of it over 25 minutes,it will output a candy to you.<br><img src="http://i.imgur.com/AO9FQlB.png" alt=""><br>This work is licensed under a <a href="http://creativecommons.org/licenses/by/4.0/" target="_blank" rel="external">Creative Commons Attribution 4.0 International License</a>.</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Week16]]></title>
      <url>http://myfly.vip/2016/05/18/Week16/</url>
      <content type="html"><![CDATA[<h1 id="Reflect-and-Processing"><a href="#Reflect-and-Processing" class="headerlink" title="Reflect and Processing"></a>Reflect and Processing</h1><p><img src="http://i.imgur.com/42EYixi.gif" alt="1DD750CD03201CF2A54B865D03F68C70"><br><a id="more"></a><br>The board used serial protocol to connect the Computer.<br><img src="http://i.imgur.com/SEVmSzM.jpg" alt=""><br>I use a software called <a href="https://processing.org/" target="_blank" rel="external">Processing</a>,and this is my processing code.</p>
<h2 id="Processing"><a href="#Processing" class="headerlink" title="Processing"></a>Processing</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line">import processing.serial.*;</div><div class="line">Serial myPort;</div><div class="line">int lf = 10;</div><div class="line"></div><div class="line">void setup()&#123;</div><div class="line">  size(300,300);</div><div class="line">  //fill(0,255,0);</div><div class="line">  //ellipse(100,100,100,100);</div><div class="line">  //myPort = new Serial(this,&quot;/dev/cu.usbmodem1421&quot;,9600);</div><div class="line">  myPort = new Serial(this,&quot;/dev/tty.usbserial&quot;,9600);</div><div class="line">&#125;</div><div class="line"></div><div class="line">void draw()&#123;</div><div class="line">  while(myPort.available() &gt; 0)&#123;</div><div class="line">    String str = myPort.readStringUntil(lf);</div><div class="line">    //println(str);</div><div class="line">    if(str!=null)&#123;</div><div class="line">      int value = Integer.parseInt(trim(str));</div><div class="line">      int nValue = (value-200)*4;</div><div class="line">      println(nValue);</div><div class="line">      background(nValue);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="At-dark"><a href="#At-dark" class="headerlink" title="At dark"></a>At dark</h3><p>If the board is in dark,the interface will be white.<br><img src="http://i.imgur.com/aPQJZEC.jpg" alt=""></p>
<h3 id="At-bright-light"><a href="#At-bright-light" class="headerlink" title="At bright light"></a>At bright light</h3><p>When the board on front of light,the interface will be dark.<br><img src="http://i.imgur.com/rOCuHIg.jpg" alt=""></p>
<h2 id="Arduino"><a href="#Arduino" class="headerlink" title="Arduino"></a>Arduino</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line">#include &quot;SoftwareSerial.h&quot;</div><div class="line"></div><div class="line">const int analogInPin =  A2;  // Analog input pin that the potentiometer is attached to</div><div class="line">int sensorValue = 0;        // value read from the pot</div><div class="line">int outputValue = 0;        // value output to the PWM (analog out)</div><div class="line"></div><div class="line">const int Rx = 1; // this is physical pin 7</div><div class="line">const int Tx = 2; // this is physical pin 6</div><div class="line">SoftwareSerial mySerial(Rx, Tx);</div><div class="line"></div><div class="line">void setup() &#123;</div><div class="line">//  pinMode(3, OUTPUT);</div><div class="line">  pinMode(Rx, INPUT);</div><div class="line">  pinMode(Tx, OUTPUT);</div><div class="line">  mySerial.begin(9600); // send serial data at 9600 bits/sec</div><div class="line">&#125;</div><div class="line"></div><div class="line">void loop() &#123;</div><div class="line">  // read the analog in value:</div><div class="line">  sensorValue = analogRead(analogInPin);</div><div class="line">  // map it to the range of the analog out:</div><div class="line">  outputValue = map(sensorValue, 0, 1023, 0, 255);</div><div class="line">  mySerial.println(outputValue);</div><div class="line">  delay(100);</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>Serial Output<br><img src="http://i.imgur.com/KR70w0I.jpg" alt=""></p>
<h2 id="Test-Arduino-and-Processing-together"><a href="#Test-Arduino-and-Processing-together" class="headerlink" title="Test Arduino and Processing together"></a>Test Arduino and Processing together</h2><p><img src="http://i.imgur.com/42EYixi.gif" alt="1DD750CD03201CF2A54B865D03F68C70"></p>
<h1 id="File-download"><a href="#File-download" class="headerlink" title="File download"></a>File download</h1><p><a href="http://archive.fabacademy.org/archives/2016/fablabshenzhen/students/426/1download/Week16Code.zip" target="_blank" rel="external">Code Download</a></p>
<p><img src="http://i.imgur.com/AO9FQlB.png" alt=""><br>This work is licensed under a <a href="http://creativecommons.org/licenses/by/4.0/" target="_blank" rel="external">Creative Commons Attribution 4.0 International License</a>.</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Week15]]></title>
      <url>http://myfly.vip/2016/05/11/Week15/</url>
      <content type="html"><![CDATA[<h1 id="Tiny45-I2C"><a href="#Tiny45-I2C" class="headerlink" title="Tiny45 I2C"></a><a href="http://archive.fabacademy.org/archives/2016/fablabshenzhen/students/426/2016/05/11/Week15-Bridge-node-I2C/" target="_blank" rel="external">Tiny45 I2C</a></h1><p><img src="http://i.imgur.com/fR9tVVc.gif" alt="E3C2AF9B1853FFC930F82E8A24BB76F0"></p>
<h1 id="RTC-I2C-Module"><a href="#RTC-I2C-Module" class="headerlink" title="RTC I2C Module"></a><a href="http://archive.fabacademy.org/archives/2016/fablabshenzhen/students/426/2016/05/11/Week15-RTC-I2C/" target="_blank" rel="external">RTC I2C Module</a></h1><p><img src="http://i.imgur.com/mcIZKO4.jpg" alt=""></p>
<a id="more"></a>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Week15_Bridge_node_I2C]]></title>
      <url>http://myfly.vip/2016/05/11/Week15-Bridge-node-I2C/</url>
      <content type="html"><![CDATA[<p><img src="http://i.imgur.com/fR9tVVc.gif" alt="E3C2AF9B1853FFC930F82E8A24BB76F0"><br><a id="more"></a></p>
<h1 id="I2c"><a href="#I2c" class="headerlink" title="I2c"></a>I2c</h1><p>The Bridge is master and the node is slave,both connect with two wire SDA(data line) and SCL(clock line)<br><img src="http://i.imgur.com/YhiFc1Z.jpg" alt=""><br>There is a reference files about <a href="http://arduino.cc/playground/Code/USIi2c" target="_blank" rel="external">ATtiny I2C</a></p>
<h2 id="Install-the-I2C-library"><a href="#Install-the-I2C-library" class="headerlink" title="Install the I2C library"></a>Install the I2C library</h2><p><img src="http://i.imgur.com/K59w2c1.jpg" alt=""></p>
<p><img src="http://i.imgur.com/fR9tVVc.gif" alt="E3C2AF9B1853FFC930F82E8A24BB76F0"></p>
<h2 id="Bridgeduino"><a href="#Bridgeduino" class="headerlink" title="Bridgeduino:"></a>Bridgeduino:</h2><p><img src="http://i.imgur.com/1OqQggL.jpg" alt=""><br><img src="http://i.imgur.com/jm5HAhi.png" alt="traces"><br><img src="http://i.imgur.com/S1gOfL7.png" alt="interto"></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div></pre></td><td class="code"><pre><div class="line">#include &lt;TinyWireM.h&gt;                  // I2C Master lib for ATTinys which use USI</div><div class="line">#define Node_Addr   0x48              </div><div class="line">byte x = 0x01;</div><div class="line">int c = 0;</div><div class="line">boolean state;</div><div class="line"></div><div class="line">#include &quot;SoftwareSerial.h&quot;</div><div class="line">const int Rx = 4; // this is physical pin 7</div><div class="line">const int Tx = 3; // this is physical pin 6</div><div class="line">SoftwareSerial mySerial(Rx, Tx);</div><div class="line"></div><div class="line">void setup() &#123;</div><div class="line">  // put your setup code here, to run once:</div><div class="line">  TinyWireM.begin();                    // initialize I2C lib</div><div class="line">  pinMode(Rx, INPUT);</div><div class="line">  pinMode(Tx, OUTPUT);</div><div class="line">  mySerial.begin(4800); // send serial data at 9600 bits/sec</div><div class="line">&#125;</div><div class="line"></div><div class="line">void loop() &#123;</div><div class="line"> if(mySerial.available())&#123;</div><div class="line">    c = mySerial.read();</div><div class="line">    delay(100);</div><div class="line">    if(c==97)&#123;</div><div class="line">        TinyWireM.beginTransmission(Node_Addr);</div><div class="line">        x = 0x01;</div><div class="line">        TinyWireM.send(x);                 // if one-shot, start conversions now</div><div class="line">        TinyWireM.endTransmission();          // Send 1 byte to the slave</div><div class="line">        delay(1000);                           // if one-shot, must wait ~750 ms for conversion    </div><div class="line">    &#125;else if(c==98)&#123;</div><div class="line">        TinyWireM.beginTransmission(Node_Addr);</div><div class="line">        x = 0x00;</div><div class="line">        TinyWireM.send(x);                 // if one-shot, start conversions now</div><div class="line">        TinyWireM.endTransmission();          // Send 1 byte to the slave</div><div class="line">        delay(1000);                           // if one-shot, must wait ~750 ms for conversion</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="NodeDuino"><a href="#NodeDuino" class="headerlink" title="NodeDuino"></a>NodeDuino</h2><p><img src="http://i.imgur.com/k8Cy4oY.jpg" alt=""></p>
<p><img src="http://i.imgur.com/jm5HAhi.png" alt="traces"><br><img src="http://i.imgur.com/S1gOfL7.png" alt="interto"></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">#include &quot;TinyWireS.h&quot;                  // wrapper class for I2C slave routines</div><div class="line">#define Node_ADDR   0x48              // 7 bit I2C Address for Node</div><div class="line">#define LED         4              // ATtiny Pin 3</div><div class="line">byte byteRcvd = 0x00;</div><div class="line"></div><div class="line">void setup() &#123;</div><div class="line">  // put your setup code here, to run once:</div><div class="line">  pinMode(LED,OUTPUT);</div><div class="line">  TinyWireS.begin(Node_ADDR);</div><div class="line">&#125;</div><div class="line"></div><div class="line">void loop() &#123;</div><div class="line">  // put your main code here, to run repeatedly:</div><div class="line">  if (TinyWireS.available())&#123;           // got I2C input!</div><div class="line">    byteRcvd = TinyWireS.receive();     // get the byte from master</div><div class="line">    if(byteRcvd == 0x01)&#123;</div><div class="line">      digitalWrite(LED,HIGH);</div><div class="line">    &#125;else&#123;</div><div class="line">      digitalWrite(LED,LOW);</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">  delay (10);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="File-Download"><a href="#File-Download" class="headerlink" title="File Download"></a>File Download</h2><p><a href="http://archive.fabacademy.org/archives/2016/fablabshenzhen/students/426/1download/Bridge.zip" target="_blank" rel="external">Bridge eagle</a><br><a href="http://archive.fabacademy.org/archives/2016/fablabshenzhen/students/426/1download/Node.zip" target="_blank" rel="external">Node eagle</a><br><a href="http://archive.fabacademy.org/archives/2016/fablabshenzhen/students/426/1download/Bridgeduino.zip" target="_blank" rel="external">Bridgeduino.zip</a><br><a href="http://archive.fabacademy.org/archives/2016/fablabshenzhen/students/426/1download/NodeDuino.zip" target="_blank" rel="external">NodeDuino.zip</a></p>
<p><img src="http://i.imgur.com/AO9FQlB.png" alt=""><br>This work is licensed under a <a href="http://creativecommons.org/licenses/by/4.0/" target="_blank" rel="external">Creative Commons Attribution 4.0 International License</a>.</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Week15_RTC_I2C]]></title>
      <url>http://myfly.vip/2016/05/11/Week15-RTC-I2C/</url>
      <content type="html"><![CDATA[<p><img src="http://i.imgur.com/mcIZKO4.jpg" alt=""><br><a id="more"></a></p>
<h1 id="RTC-I2C-Module"><a href="#RTC-I2C-Module" class="headerlink" title="RTC I2C Module"></a>RTC I2C Module</h1><p>I want to add a RTC to my finial project,so i decide to make a RTC module to test.<br>I choice the Maxim’s DS3231,it’s easy to use.<br><img src="http://i.imgur.com/MgobzTS.jpg" alt=""><br><img src="http://i.imgur.com/kwxCPcx.jpg" alt=""></p>
<p><img src="http://i.imgur.com/Jy7qf9x.jpg" alt=""></p>
<p><img src="http://i.imgur.com/KCDazQ5.png" alt="traces"></p>
<p><img src="http://i.imgur.com/EXZ0OeU.png" alt="interto"></p>
<p><img src="http://i.imgur.com/M7QXUqe.jpg" alt=""></p>
<h2 id="Install-the-library-of-DS3231"><a href="#Install-the-library-of-DS3231" class="headerlink" title="Install the library of DS3231"></a>Install the library of DS3231</h2><p><img src="http://i.imgur.com/xDQ59qg.jpg" alt=""></p>
<h2 id="Open-the-Example-“interrupts”-and-test-the-module"><a href="#Open-the-Example-“interrupts”-and-test-the-module" class="headerlink" title="Open the Example-“interrupts” and test the module."></a>Open the Example-“interrupts” and test the module.</h2><p><img src="http://i.imgur.com/mcIZKO4.jpg" alt=""></p>
<h2 id="File-Download"><a href="#File-Download" class="headerlink" title="File Download"></a>File Download</h2><p><a href="http://archive.fabacademy.org/archives/2016/fablabshenzhen/students/426/1download/RTC.zip" target="_blank" rel="external">eagle</a><br><img src="http://i.imgur.com/AO9FQlB.png" alt=""><br>This work is licensed under a <a href="http://creativecommons.org/licenses/by/4.0/" target="_blank" rel="external">Creative Commons Attribution 4.0 International License</a>.</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Week14]]></title>
      <url>http://myfly.vip/2016/05/04/Week14/</url>
      <content type="html"><![CDATA[<h1 id="Cushion-of-a-chair"><a href="#Cushion-of-a-chair" class="headerlink" title="Cushion of a chair"></a>Cushion of a chair</h1><p>This week,I want to composite a cushion.But our CNC Machine was broken,so we have to go to another fablab in a another city to finish our works Q^Q<br><img src="http://i.imgur.com/gE1YNZu.jpg" alt="9.pi"><br><a id="more"></a></p>
<h2 id="Design-a-3D-model"><a href="#Design-a-3D-model" class="headerlink" title="Design a 3D model"></a>Design a 3D model</h2><p>I use fusion 360 to design,the model has depth lines,because I afraid there is no effect with light lines.<br><img src="http://i.imgur.com/nFIWx1U.jpg" alt=""></p>
<p>Out put as STL.<br><img src="http://i.imgur.com/e1wIRI0.jpg" alt=""></p>
<h2 id="Milling"><a href="#Milling" class="headerlink" title="Milling"></a>Milling</h2><p>The CNC Machine in this lab is Victor CNC Engraver VR1212B<br>First,we need software called “Type3”,a leading developer of artistic CAD/CAM software solutions for industrial engraving and 3D jewelry design<br><img src="http://i.imgur.com/V0gPhv1.jpg" alt=""><br>Then,Input the stl and select top view.<br><img src="http://i.imgur.com/g0ZK9Zk.jpg" alt=""></p>
<p>Choose CAM Module on the toolbar -&gt; Create a new tool path - Embossment automatic engrave<br><img src="http://i.imgur.com/2U3KeAt.jpg" alt=""></p>
<p>Select the tool we used.<br><img src="http://i.imgur.com/j3FWZXF.jpg" alt=""></p>
<p>Choose Machine Setting - set the original point and end point according to the thickness of the materials we cut, we use 25mm plank<br>Speeds and Feeds:</p>
<ul>
<li>Chip load: ~ 0.001-0.010” = feed rate (inches per minute) / (RPM x number of flutes)</li>
<li>Cut depth: ~ tool diameter</li>
<li>Step-over: ~ tool diameter/2<br><img src="http://i.imgur.com/apDru2H.jpg" alt=""><br><img src="http://i.imgur.com/dMwj83n.jpg" alt=""></li>
</ul>
<p>Than we use a software,called “VicPCI”,it will help us to cut according to our files.<br><img src="http://i.imgur.com/jeVfb2X.jpg" alt=""></p>
<p>Milling the Wood<br><img src="http://i.imgur.com/WmDby2E.gif" alt="6B3B3A3C856BF186154A4206499AA0FA"></p>
<p>It looks like the Big mah-jong<br><img src="http://i.imgur.com/OMq5vvm.jpg" alt=""></p>
<h2 id="Composites"><a href="#Composites" class="headerlink" title="Composites"></a>Composites</h2><p>We don’t have a spray wax and have enough time in other city to buy a spray wax,so we put a layer of thin plastic wrap as a protection of my 3D mould<br><img src="http://i.imgur.com/ZOBtDIW.jpg" alt=""></p>
<p>Mix the Compound A(Epoxy) and Compound B(Hardener) in the proportion of 1:1.</p>
<p><img src="http://i.imgur.com/tR0qrqU.jpg" alt=""></p>
<p>Cut burlap into pieces,and mix with the mixture,than put it evenly on the face of the mould<br><img src="http://i.imgur.com/RAFFLzC.jpg" alt=""><br>Use vaccum to suck out the air.<br><img src="http://i.imgur.com/HB6wFkv.jpg" alt=""></p>
<p>On the next day,open the vaccum bag,take off the composition.<br><img src="http://i.imgur.com/gE1YNZu.jpg" alt="9.pi"></p>
<p>Now,you can sit on it.<br><img src="http://i.imgur.com/JUndKTd.jpg" alt=""></p>
<p>Ah,I find another usage!<br><img src="http://i.imgur.com/37gmsjD.jpg" alt=""></p>
<p>Thanks for the help of <a href="http://archive.fabacademy.org/archives/2016/fablabxh/students/338/index.html" target="_blank" rel="external">Jay Mok</a> and Prof. Hu from <a href="http://archive.fabacademy.org/archives/2016/fablabxh/" target="_blank" rel="external">FablabXH</a> to let us using the CNC machine in the lab.</p>
<h2 id="File-Download"><a href="#File-Download" class="headerlink" title="File Download"></a>File Download</h2><p><a href="http://archive.fabacademy.org/archives/2016/fablabshenzhen/students/426/1download/ChairTop.stl" target="_blank" rel="external">stl</a></p>
<p><img src="http://i.imgur.com/AO9FQlB.png" alt=""><br>This work is licensed under a <a href="http://creativecommons.org/licenses/by/4.0/" target="_blank" rel="external">Creative Commons Attribution 4.0 International License</a>.</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Week13 - Output devices]]></title>
      <url>http://myfly.vip/2016/04/27/Week13/</url>
      <content type="html"><![CDATA[<h1 id="RGB-Controller"><a href="#RGB-Controller" class="headerlink" title="RGB Controller"></a><a href="http://archive.fabacademy.org/archives/2016/fablabshenzhen/students/426/2016/04/27/Week13-RGB/" target="_blank" rel="external">RGB Controller</a></h1><p><img src="http://i.imgur.com/PKVsXez.gif" alt="C1CA5B8C31885065A94695C48F91A301"></p>
<h1 id="Replace-the-microcontroller-of-the-Toy-Motor-and-Speaker"><a href="#Replace-the-microcontroller-of-the-Toy-Motor-and-Speaker" class="headerlink" title="Replace the microcontroller of the Toy(Motor and Speaker)"></a><a href="http://archive.fabacademy.org/archives/2016/fablabshenzhen/students/426/2016/04/27/Week13-Speaker-Motor/" target="_blank" rel="external">Replace the microcontroller of the Toy(Motor and Speaker)</a></h1><p><img src="http://i.imgur.com/4KmZjvd.gif" alt="D1274DBF497575EEB34A8C4C324D1575"><br><a id="more"></a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Week13_RGB]]></title>
      <url>http://myfly.vip/2016/04/27/Week13-RGB/</url>
      <content type="html"><![CDATA[<p><img src="http://i.imgur.com/PKVsXez.gif" alt="C1CA5B8C31885065A94695C48F91A301"><br><a id="more"></a></p>
<h1 id="RGB"><a href="#RGB" class="headerlink" title="RGB"></a>RGB</h1><p>I reference Neil PCB Board,and we can’t find the power IC,so we remove the power IC.<br>I also read the <a href="http://www.atmel.com/devices/ATTINY45.aspx" target="_blank" rel="external">datasheet</a> from here,because I want to find out how to use the chip.<br><img src="http://i.imgur.com/wh2kq75.jpg" alt=""></p>
<h2 id="Draw-the-Schematic"><a href="#Draw-the-Schematic" class="headerlink" title="Draw the Schematic"></a>Draw the Schematic</h2><p><img src="http://i.imgur.com/L4hY3J8.jpg" alt=""></p>
<h2 id="Layout-the-PCB"><a href="#Layout-the-PCB" class="headerlink" title="Layout the PCB"></a>Layout the PCB</h2><p><img src="http://i.imgur.com/1vgjKJ1.jpg" alt=""></p>
<h2 id="Output-the-rml-file"><a href="#Output-the-rml-file" class="headerlink" title="Output the .rml file"></a>Output the .rml file</h2><p><img src="http://i.imgur.com/Yy8tP4E.jpg" alt=""></p>
<p><img src="http://i.imgur.com/a00zoRh.jpg" alt=""></p>
<h2 id="Milling-the-board"><a href="#Milling-the-board" class="headerlink" title="Milling the board"></a>Milling the board</h2><p><img src="http://i.imgur.com/SYAyZYe.jpg" alt=""></p>
<h2 id="Soldering"><a href="#Soldering" class="headerlink" title="Soldering"></a>Soldering</h2><p><img src="http://i.imgur.com/YFUpv4F.jpg" alt=""></p>
<h2 id="Then-I-download-the-Neil-code-to-test"><a href="#Then-I-download-the-Neil-code-to-test" class="headerlink" title="Then,I download the Neil code to test"></a>Then,I download the Neil code to test</h2><p><img src="http://i.imgur.com/PKVsXez.gif" alt="C1CA5B8C31885065A94695C48F91A301"></p>
<h2 id="File-Download"><a href="#File-Download" class="headerlink" title="File Download"></a>File Download</h2><p><a href="http://archive.fabacademy.org/archives/2016/fablabshenzhen/students/426/1download/RGB.zip" target="_blank" rel="external">eagle</a></p>
<p><img src="http://i.imgur.com/AO9FQlB.png" alt=""><br>This work is licensed under a <a href="http://creativecommons.org/licenses/by/4.0/" target="_blank" rel="external">Creative Commons Attribution 4.0 International License</a>.</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Week13 - Speaker and Motor]]></title>
      <url>http://myfly.vip/2016/04/27/Week13-Speaker-Motor/</url>
      <content type="html"><![CDATA[<h1 id="Replace-the-microcontroller-of-the-Toy-Motor-and-Speaker"><a href="#Replace-the-microcontroller-of-the-Toy-Motor-and-Speaker" class="headerlink" title="Replace the microcontroller of the Toy(Motor and Speaker)"></a>Replace the microcontroller of the Toy(Motor and Speaker)</h1><p>Motor driver  L9110 and A4953<br><img src="http://i.imgur.com/4KmZjvd.gif" alt="D1274DBF497575EEB34A8C4C324D1575"><br><a id="more"></a></p>
<h2 id="A4953"><a href="#A4953" class="headerlink" title="A4953"></a>A4953</h2><p>At first,I reference to <a href="http://academy.cba.mit.edu/classes/output_devices/speaker/hello.speaker.45.png" target="_blank" rel="external">Nerl’s H-bridge board</a></p>
<h3 id="Design-the-Schematic"><a href="#Design-the-Schematic" class="headerlink" title="Design the Schematic"></a>Design the Schematic</h3><p><img src="http://i.imgur.com/19Z1ruq.jpg" alt=""></p>
<h3 id="Layout-the-PCB"><a href="#Layout-the-PCB" class="headerlink" title="Layout the PCB"></a>Layout the PCB</h3><p><img src="http://i.imgur.com/iJxQUax.jpg" alt=""></p>
<h3 id="Output-the-traces"><a href="#Output-the-traces" class="headerlink" title="Output the traces"></a>Output the traces</h3><p><img src="http://i.imgur.com/p3QbGnu.png" alt="traces"></p>
<h3 id="Output-the-interior"><a href="#Output-the-interior" class="headerlink" title="Output the interior"></a>Output the interior</h3><p><img src="http://i.imgur.com/mXOGc0W.png" alt="interior"></p>
<p>After I milled and soldered the board,I found I use the wrong ic,the right ic is A4953,not the 4953.So I try another motor driver ic I have.</p>
<h2 id="L9110"><a href="#L9110" class="headerlink" title="L9110"></a>L9110</h2><h3 id="Functional-Block-Diagram"><a href="#Functional-Block-Diagram" class="headerlink" title="Functional Block Diagram"></a>Functional Block Diagram</h3><p><img src="http://i.imgur.com/oT09fuG.jpg" alt=""></p>
<h3 id="Pin-out-Diagrams"><a href="#Pin-out-Diagrams" class="headerlink" title="Pin-out Diagrams"></a>Pin-out Diagrams</h3><p><img src="http://i.imgur.com/CCslPS3.jpg" alt=""></p>
<h3 id="Control-Mode"><a href="#Control-Mode" class="headerlink" title="Control Mode"></a>Control Mode</h3><p><img src="http://i.imgur.com/PcWWKot.jpg" alt=""></p>
<h3 id="Design-the-schematic"><a href="#Design-the-schematic" class="headerlink" title="Design the schematic"></a>Design the schematic</h3><p>I add two motor drivers and speaker driver<br><img src="http://i.imgur.com/cXNm763.jpg" alt=""></p>
<h3 id="Layout-the-PCB-board"><a href="#Layout-the-PCB-board" class="headerlink" title="Layout the PCB board"></a>Layout the PCB board</h3><p><img src="http://i.imgur.com/yrnvLoc.jpg" alt=""></p>
<h3 id="Output-the-traces-1"><a href="#Output-the-traces-1" class="headerlink" title="Output the traces"></a>Output the traces</h3><p><img src="http://i.imgur.com/0T7gLSm.png" alt="L9110_audio_Module_traces"></p>
<h3 id="Output-the-interior-1"><a href="#Output-the-interior-1" class="headerlink" title="Output the interior"></a>Output the interior</h3><p><img src="http://i.imgur.com/K7Kl3NA.png" alt="L9110_audio_Module_interio"></p>
<h2 id="Moter-test"><a href="#Moter-test" class="headerlink" title="Moter test:"></a>Moter test:</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">void setup() &#123;</div><div class="line">  pinMode(5, OUTPUT);</div><div class="line">  pinMode(6, OUTPUT);</div><div class="line">  pinMode(9, OUTPUT);</div><div class="line">  pinMode(10, OUTPUT);</div><div class="line">  digitalWrite(13, LOW);</div><div class="line">&#125;</div><div class="line"></div><div class="line">// the loop function runs over and over again forever</div><div class="line">void loop() &#123;</div><div class="line">  digitalWrite(5, HIGH);</div><div class="line">  digitalWrite(6, LOW);</div><div class="line">  digitalWrite(9, LOW);</div><div class="line">  digitalWrite(10, HIGH);</div><div class="line">  delay(500);</div><div class="line">  digitalWrite(9, HIGH);</div><div class="line">  digitalWrite(10, LOW);</div><div class="line">  digitalWrite(5, LOW);</div><div class="line">  digitalWrite(6, HIGH);</div><div class="line">  delay(500);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>Yeap!Motor work!<br><img src="http://i.imgur.com/4KmZjvd.gif" alt="D1274DBF497575EEB34A8C4C324D1575"></p>
<h2 id="Speaker-Test"><a href="#Speaker-Test" class="headerlink" title="Speaker Test"></a>Speaker Test</h2><p>I use the Arduino Example -&gt; 02.Digital -&gt; toneMelody<br><div class="video-container"><iframe src="//player.vimeo.com/video/173576022" frameborder="0" allowfullscreen></iframe></div></p>
<h2 id="File-Download"><a href="#File-Download" class="headerlink" title="File Download"></a>File Download</h2><p><a href="http://archive.fabacademy.org/archives/2016/fablabshenzhen/students/426/1download/L9110.zip" target="_blank" rel="external">eagle</a><br><a href="http://archive.fabacademy.org/archives/2016/fablabshenzhen/students/426/1download/motorspeaker.zip" target="_blank" rel="external">Arduino Code</a></p>
<p><img src="http://i.imgur.com/AO9FQlB.png" alt=""><br>This work is licensed under a <a href="http://creativecommons.org/licenses/by/4.0/" target="_blank" rel="external">Creative Commons Attribution 4.0 International License</a>.</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Week12 - 3D moulding and casting]]></title>
      <url>http://myfly.vip/2016/04/20/week12/</url>
      <content type="html"><![CDATA[<p><img src="http://i.imgur.com/bbafsNA.gif" alt="volcano"><br><a id="more"></a></p>
<h1 id="Introduce"><a href="#Introduce" class="headerlink" title="Introduce"></a>Introduce</h1><p>At first,I didn’t realize I should use CNC and design the 3D model by myself.So I found a volcano and printed it.After that I designed a stamper by myself,and used a CNC machine to mill it.</p>
<h1 id="Volcano"><a href="#Volcano" class="headerlink" title="Volcano"></a>Volcano</h1><h2 id="Print-the-volcano-The-Mt-St-Helens"><a href="#Print-the-volcano-The-Mt-St-Helens" class="headerlink" title="Print the volcano - The Mt. St. Helens"></a>Print the volcano - The Mt. St. Helens</h2><p>I found the 3D module here <a href="http://www.thingiverse.com/thing:822479" target="_blank" rel="external">Mt. St. Helens</a><br><img src="http://i.imgur.com/RONQzal.jpg" alt=""></p>
<h2 id="Mixed-A-Urethane-Mold-compound-and-B-Rubber-Mold-compound"><a href="#Mixed-A-Urethane-Mold-compound-and-B-Rubber-Mold-compound" class="headerlink" title="Mixed A(Urethane Mold compound) and B(Rubber Mold compound)"></a>Mixed A(Urethane Mold compound) and B(Rubber Mold compound)</h2><p><img src="http://i.imgur.com/0QUeHFL.jpg" alt=""></p>
<h2 id="Pour-over-prepared-model-and-let-it-cure-to-a-soild-flexible-rubber-mold"><a href="#Pour-over-prepared-model-and-let-it-cure-to-a-soild-flexible-rubber-mold" class="headerlink" title="Pour over prepared model and let it cure to a soild,flexible rubber mold"></a>Pour over prepared model and let it cure to a soild,flexible rubber mold</h2><p><img src="http://i.imgur.com/I0urmWW.jpg" alt=""></p>
<h2 id="Waiting-for-a-day-and-take-out-the-model"><a href="#Waiting-for-a-day-and-take-out-the-model" class="headerlink" title="Waiting for a day,and take out the model"></a>Waiting for a day,and take out the model</h2><p><img src="http://i.imgur.com/fpXiPZR.jpg" alt=""></p>
<h2 id="Pour-the-liquid-wax-into-rubber-mold-cavity-and-let-cure"><a href="#Pour-the-liquid-wax-into-rubber-mold-cavity-and-let-cure" class="headerlink" title="Pour the liquid wax into rubber mold cavity and let cure"></a>Pour the liquid wax into rubber mold cavity and let cure</h2><p><img src="http://i.imgur.com/WkOF3yO.jpg" alt=""></p>
<h2 id="Demold-the-wax-volcano"><a href="#Demold-the-wax-volcano" class="headerlink" title="Demold the wax volcano"></a>Demold the wax volcano</h2><p><img src="http://i.imgur.com/MAYY5Zv.jpg" alt=""></p>
<h2 id="Kindle-the-wax-volcano"><a href="#Kindle-the-wax-volcano" class="headerlink" title="Kindle the wax volcano"></a>Kindle the wax volcano</h2><p><img src="http://i.imgur.com/bbafsNA.gif" alt="volcano"></p>
<h1 id="Use-CNC-to-Milling-a-stamper"><a href="#Use-CNC-to-Milling-a-stamper" class="headerlink" title="Use CNC to Milling a stamper"></a>Use CNC to Milling a stamper</h1><h2 id="Design-the-Mold-and-output-as-stl"><a href="#Design-the-Mold-and-output-as-stl" class="headerlink" title="Design the Mold and output as .stl"></a>Design the Mold and output as .stl</h2><p><img src="http://i.imgur.com/c0n4uI9.jpg" alt=""></p>
<h2 id="Fabmoudle-or-Modela-Player"><a href="#Fabmoudle-or-Modela-Player" class="headerlink" title="Fabmoudle or Modela Player"></a>Fabmoudle or Modela Player</h2><p>At First,I try to use Fabmoudles,but the fabmoudles without response while processing the file.And the classmate told me I can use the Modela Player instead of fabmoudles<br><img src="http://i.imgur.com/SIkthbT.jpg" alt=""></p>
<h2 id="Setting-the-Material"><a href="#Setting-the-Material" class="headerlink" title="Setting the Material"></a>Setting the Material</h2><p>We select the wax as Material,so we choose the “Modeling Wax”<br><img src="http://i.imgur.com/hZzKHeg.jpg" alt=""></p>
<h2 id="Create-Process-Creation"><a href="#Create-Process-Creation" class="headerlink" title="Create Process Creation"></a>Create Process Creation</h2><p>Choose the “Surfacing” at first,and than choose “Roughing”<br><img src="http://i.imgur.com/kP9Ro0j.jpg" alt=""></p>
<h2 id="Setting-the-original-point"><a href="#Setting-the-original-point" class="headerlink" title="Setting the original point"></a>Setting the original point</h2><p>Find a smooth surface and set an original point<br><img src="http://i.imgur.com/B4d6KkX.jpg" alt=""></p>
<h2 id="Output-to-the-Roland-SRM-20"><a href="#Output-to-the-Roland-SRM-20" class="headerlink" title="Output to the Roland SRM-20"></a>Output to the Roland SRM-20</h2><p><img src="http://i.imgur.com/D0KrJWc.jpg" alt=""></p>
<h2 id="Milling-the-wax"><a href="#Milling-the-wax" class="headerlink" title="Milling the wax"></a>Milling the wax</h2><p><img src="http://i.imgur.com/H5auItl.jpg" alt=""></p>
<h2 id="Take-off-the-stamper"><a href="#Take-off-the-stamper" class="headerlink" title="Take off the stamper"></a>Take off the stamper</h2><p><img src="http://i.imgur.com/bwkDDEG.jpg" alt=""></p>
<h2 id="Light-my-volcano"><a href="#Light-my-volcano" class="headerlink" title="Light my volcano "></a>Light my volcano <img src="http://i.imgur.com/CZG24wt.jpg" alt=""></h2><h2 id="Put-the-stamper-on-it"><a href="#Put-the-stamper-on-it" class="headerlink" title="Put the stamper on it"></a>Put the stamper on it</h2><p><img src="http://i.imgur.com/6TEWteS.jpg" alt=""></p>
<h2 id="Take-off-the-stamper-1"><a href="#Take-off-the-stamper-1" class="headerlink" title="Take off the stamper!"></a>Take off the stamper!</h2><p><img src="http://i.imgur.com/U0jqF7p.jpg" alt=""></p>
<h2 id="File-Download"><a href="#File-Download" class="headerlink" title="File Download"></a>File Download</h2><p><a href="http://archive.fabacademy.org/archives/2016/fablabshenzhen/students/426/1download/st_helens_cut.stl" target="_blank" rel="external">St_Helens</a><br><a href="http://archive.fabacademy.org/archives/2016/fablabshenzhen/students/426/1download/M.stl" target="_blank" rel="external">M</a></p>
<p><img src="http://i.imgur.com/AO9FQlB.png" alt=""><br>This work is licensed under a <a href="http://creativecommons.org/licenses/by/4.0/" target="_blank" rel="external">Creative Commons Attribution 4.0 International License</a>.</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Week11 - Input devices]]></title>
      <url>http://myfly.vip/2016/04/13/week11/</url>
      <content type="html"><![CDATA[<p><img src="http://i.imgur.com/fRwjwVf.gif" alt="CB1633FC62F02C6ECDFB5693D961C7D1"><br><a id="more"></a></p>
<h1 id="Design-the-Reflect"><a href="#Design-the-Reflect" class="headerlink" title="Design the Reflect"></a>Design the Reflect</h1><h2 id="Create-the-OP580-Device"><a href="#Create-the-OP580-Device" class="headerlink" title="Create the OP580 Device"></a>Create the OP580 Device</h2><h3 id="Draw-the-symbol-of-OP580"><a href="#Draw-the-symbol-of-OP580" class="headerlink" title="Draw the symbol of OP580"></a>Draw the symbol of OP580</h3><p><img src="http://i.imgur.com/P7nrSg6.jpg" alt=""></p>
<h3 id="Draw-the-Package-of-OP580"><a href="#Draw-the-Package-of-OP580" class="headerlink" title="Draw the Package of OP580"></a>Draw the Package of OP580</h3><p><img src="http://i.imgur.com/pNA19PD.jpg" alt=""></p>
<h3 id="Create-the-Device-of-OP580"><a href="#Create-the-Device-of-OP580" class="headerlink" title="Create the Device of OP580"></a>Create the Device of OP580</h3><p><img src="http://i.imgur.com/6iQtd7Z.jpg" alt=""></p>
<h2 id="Draw-the-schematic"><a href="#Draw-the-schematic" class="headerlink" title="Draw the schematic"></a>Draw the schematic</h2><p><img src="http://i.imgur.com/umd49A1.jpg" alt=""></p>
<h2 id="Draw-the-PCB-board"><a href="#Draw-the-PCB-board" class="headerlink" title="Draw the PCB board"></a>Draw the PCB board</h2><p><img src="http://i.imgur.com/Hiunvxt.jpg" alt=""></p>
<h2 id="Output-the-image-of-traces"><a href="#Output-the-image-of-traces" class="headerlink" title="Output the image of traces"></a>Output the image of traces</h2><p><img src="http://i.imgur.com/1v6ftyB.png" alt="traces"></p>
<h2 id="Output-the-image-of-interior"><a href="#Output-the-image-of-interior" class="headerlink" title="Output the image of interior"></a>Output the image of interior</h2><p><img src="http://i.imgur.com/B39K4fR.png" alt="interio"></p>
<h1 id="Arduino-and-Reflect-with-ATtiny45"><a href="#Arduino-and-Reflect-with-ATtiny45" class="headerlink" title="Arduino and Reflect with ATtiny45"></a>Arduino and Reflect with ATtiny45</h1><p>Reference: [Programming an Atiny w/Arduino 1.6(or 1.0)] (<a href="http://highlowtech.org/?p=1695" target="_blank" rel="external">http://highlowtech.org/?p=1695</a>)</p>
<h2 id="Arduino-ATtiny45-Pin"><a href="#Arduino-ATtiny45-Pin" class="headerlink" title="Arduino ATtiny45 Pin"></a>Arduino ATtiny45 Pin</h2><p><img src="http://i.imgur.com/zXzY8c4.jpg" alt=""></p>
<h2 id="Arduino-ATiny45-Setting"><a href="#Arduino-ATiny45-Setting" class="headerlink" title="Arduino ATiny45 Setting"></a>Arduino ATiny45 Setting</h2><p><img src="http://i.imgur.com/jhNuVDs.jpg" alt=""></p>
<h2 id="Reflect-and-Blink-with-Arduino"><a href="#Reflect-and-Blink-with-Arduino" class="headerlink" title="Reflect and Blink with Arduino"></a>Reflect and Blink with Arduino</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">const int analogInPin =  A2;  // Analog input pin that the potentiometer is attached to</div><div class="line">int sensorValue = 0;        // value read from the pot</div><div class="line">int outputValue = 0;        // value output to the PWM (analog out)</div><div class="line"></div><div class="line">void setup() &#123;</div><div class="line">  pinMode(3, OUTPUT);</div><div class="line">&#125;</div><div class="line"></div><div class="line">void loop() &#123;</div><div class="line">  // read the analog in value:</div><div class="line">  sensorValue = analogRead(analogInPin);</div><div class="line">  // map it to the range of the analog out:</div><div class="line">  outputValue = map(sensorValue, 0, 1023, 0, 255);</div><div class="line">  if(outputValue &gt; 240)&#123;</div><div class="line">    digitalWrite(3, LOW);</div><div class="line">  &#125;else&#123;</div><div class="line">    digitalWrite(3, HIGH);</div><div class="line">  &#125;</div><div class="line">  delay(10);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><img src="http://i.imgur.com/fRwjwVf.gif" alt="CB1633FC62F02C6ECDFB5693D961C7D1"></p>
<h2 id="Add-Serial-Port"><a href="#Add-Serial-Port" class="headerlink" title="Add Serial Port"></a>Add Serial Port</h2><p>Reference:  <a href="http://www.instructables.com/id/ATtiny85-ATtiny84-Analog-Pins-Serial-Communication/" target="_blank" rel="external">ATtiny85 &amp; ATtiny84 Analog Pins, Serial Communication, etc.</a></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line">#include &quot;SoftwareSerial.h&quot;</div><div class="line"></div><div class="line">const int analogInPin =  A2;  // Analog input pin that the potentiometer is attached to</div><div class="line">int sensorValue = 0;        // value read from the pot</div><div class="line">int outputValue = 0;        // value output to the PWM (analog out)</div><div class="line"></div><div class="line">const int Rx = 1; // this is physical pin 7</div><div class="line">const int Tx = 2; // this is physical pin 6</div><div class="line">SoftwareSerial mySerial(Rx, Tx);</div><div class="line"></div><div class="line">void setup() &#123;</div><div class="line">  pinMode(3, OUTPUT);</div><div class="line">  pinMode(Rx, INPUT);</div><div class="line">  pinMode(Tx, OUTPUT);</div><div class="line">  mySerial.begin(115200); // send serial data at 9600 bits/sec</div><div class="line">&#125;</div><div class="line"></div><div class="line">void loop() &#123;</div><div class="line">  // read the analog in value:</div><div class="line">  sensorValue = analogRead(analogInPin);</div><div class="line">  // map it to the range of the analog out:</div><div class="line">  outputValue = map(sensorValue, 0, 1023, 0, 255);</div><div class="line">  mySerial.print(&quot;sensorValue = &quot;);</div><div class="line">  mySerial.println(outputValue);</div><div class="line"></div><div class="line"></div><div class="line">  if(outputValue &gt; 240)&#123;</div><div class="line">    digitalWrite(3, LOW);</div><div class="line">  &#125;else &#123;</div><div class="line">    digitalWrite(3, HIGH);</div><div class="line">  &#125;</div><div class="line">  delay(10);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="Test-Results："><a href="#Test-Results：" class="headerlink" title="Test Results："></a>Test Results：</h3><p>outputValue: 210~240<br><img src="http://i.imgur.com/C4oQUtJ.jpg" alt=""></p>
<p>outputValue: 160~180<br><img src="http://i.imgur.com/KHDvXuI.jpg" alt=""></p>
<p>outputValue &gt; 240<br><img src="http://i.imgur.com/PBiCDCV.jpg" alt=""></p>
<h2 id="Fix-the-Bug-when-the-outputValue-lt-180"><a href="#Fix-the-Bug-when-the-outputValue-lt-180" class="headerlink" title="Fix the Bug when the outputValue &lt; 180"></a>Fix the Bug when the outputValue &lt; 180</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line">#include &quot;SoftwareSerial.h&quot;</div><div class="line"></div><div class="line">const int analogInPin =  A2;  // Analog input pin that the potentiometer is attached to</div><div class="line">int sensorValue = 0;        // value read from the pot</div><div class="line">int outputValue = 0;        // value output to the PWM (analog out)</div><div class="line"></div><div class="line">const int Rx = 1; // this is physical pin 7</div><div class="line">const int Tx = 2; // this is physical pin 6</div><div class="line">SoftwareSerial mySerial(Rx, Tx);</div><div class="line"></div><div class="line">void setup() &#123;</div><div class="line">  pinMode(3, OUTPUT);</div><div class="line">  pinMode(Rx, INPUT);</div><div class="line">  pinMode(Tx, OUTPUT);</div><div class="line">  mySerial.begin(115200); // send serial data at 9600 bits/sec</div><div class="line">&#125;</div><div class="line"></div><div class="line">void loop() &#123;</div><div class="line">  // read the analog in value:</div><div class="line">  sensorValue = analogRead(analogInPin);</div><div class="line">  // map it to the range of the analog out:</div><div class="line">  outputValue = map(sensorValue, 0, 1023, 0, 255);</div><div class="line">  mySerial.print(&quot;sensorValue = &quot;);</div><div class="line">  mySerial.println(outputValue);</div><div class="line"></div><div class="line"></div><div class="line">  if(outputValue &gt; 240 || outputValue &lt; 180)&#123;</div><div class="line">    digitalWrite(3, LOW);</div><div class="line">  &#125;else&#123;</div><div class="line">    digitalWrite(3, HIGH);</div><div class="line">  &#125;</div><div class="line">  delay(10);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="File-Download"><a href="#File-Download" class="headerlink" title="File Download"></a>File Download</h2><p><a href="http://archive.fabacademy.org/archives/2016/fablabshenzhen/students/426/1download/Reflect.zip" target="_blank" rel="external">Eagle</a></p>
<p><img src="http://i.imgur.com/AO9FQlB.png" alt=""><br>This work is licensed under a <a href="http://creativecommons.org/licenses/by/4.0/" target="_blank" rel="external">Creative Commons Attribution 4.0 International License</a>.</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[week9~10 Machanical design and machine design]]></title>
      <url>http://myfly.vip/2016/03/30/week9-10/</url>
      <content type="html"><![CDATA[<p><img src="http://archive.fabacademy.org/archives/2016/fablabshenzhen/images/mtm_2016___szoil/u120.png" alt="MTM"></p>
<a id="more"></a>
<h1 id="Introduce"><a href="#Introduce" class="headerlink" title="Introduce"></a>Introduce</h1><h2 id="1-Getting-Started-With-Gestalt-Nodes"><a href="#1-Getting-Started-With-Gestalt-Nodes" class="headerlink" title="1.Getting Started With Gestalt Nodes"></a>1.Getting Started With Gestalt Nodes</h2><p>Reference URL: <a href="http://archive.fabacademy.org/archives/2016/doc/MachineMakingNotes.html" target="_blank" rel="external">http://archive.fabacademy.org/archives/2016/doc/MachineMakingNotes.html</a></p>
<h2 id="2-FabNet"><a href="#2-FabNet" class="headerlink" title="2.FabNet"></a>2.FabNet</h2><p>Fabnet is a multi-drop network, meaning that multiple modules (a.k.a. nodes) share a single set of communication wires.<br>Reference URL: <a href="http://mtm.cba.mit.edu/fabinabox/dev/fabnet/overview.html" target="_blank" rel="external">http://mtm.cba.mit.edu/fabinabox/dev/fabnet/overview.html</a><br>FabNet转接板<br><img src="http://i.imgur.com/rILsQp0.jpg" alt=""><br>功能：</p>
<ol>
<li>连接电脑 Connect to PC with FTDI USB</li>
<li>连接驱动模块 Connect to the Fabnet（Gestalt Node）</li>
<li>接入电源 Provides power at two voltages 12V-24V/7.5V<h3 id="2-1-Create-a-bridge-board-that-adapts-that-cable-to-Fabnet"><a href="#2-1-Create-a-bridge-board-that-adapts-that-cable-to-Fabnet" class="headerlink" title="2.1 Create a bridge board that adapts that cable to Fabnet."></a>2.1 Create a bridge board that adapts that cable to Fabnet.</h3>Download the board files from here:<br><a href="http://mtm.cba.mit.edu/fabinabox/dev/fabnet/files.html" target="_blank" rel="external">http://mtm.cba.mit.edu/fabinabox/dev/fabnet/files.html</a></li>
</ol>
<h3 id="2-2-Download-a-firmware-to-Gestalt-Node"><a href="#2-2-Download-a-firmware-to-Gestalt-Node" class="headerlink" title="2.2 Download a firmware to Gestalt Node"></a>2.2 Download a firmware to Gestalt Node</h3><p>下载固件到驱动模块（出厂时是已经默认下载了）<br>Here is the source and hex file for the node firmware: <a href="https://github.com/imoyer/086-005" target="_blank" rel="external">https://github.com/imoyer/086-005</a></p>
<h1 id="Process"><a href="#Process" class="headerlink" title="Process"></a>Process</h1><h2 id="3-制终端软件-wxGestalt"><a href="#3-制终端软件-wxGestalt" class="headerlink" title="3.制终端软件 wxGestalt"></a>3.制终端软件 wxGestalt</h2><p>wxGestalt is a very, very simple IDE for controlling Gestalt nodes in Python<br><a href="http://archive.fabacademy.org/archives/2016/doc/projects/wxgestalt.html" target="_blank" rel="external">http://archive.fabacademy.org/archives/2016/doc/projects/wxgestalt.html</a><br><img src="http://i.imgur.com/z5OAqrc.png" alt=""></p>
<ol>
<li><p>Machine Setup<br><img src="http://i.imgur.com/6O0e2EA.png" alt=""></p>
</li>
<li><p>Identify the nodes<br><img src="http://i.imgur.com/PXW1MYP.png" alt=""></p>
</li>
<li><p>IDE<br><img src="http://i.imgur.com/IEFiSvF.png" alt=""></p>
</li>
<li><p>Run the machine<br><img src="http://i.imgur.com/Dct62xJ.png" alt=""></p>
</li>
</ol>
<h1 id="Problem"><a href="#Problem" class="headerlink" title="Problem"></a>Problem</h1><h2 id="1-The-power-wire-become-hot-and-melt"><a href="#1-The-power-wire-become-hot-and-melt" class="headerlink" title="1.The power wire become hot and melt"></a>1.The power wire become hot and melt</h2><p><img src="http://i.imgur.com/VhQT29E.jpg" alt="1.pi"></p>
<p>Solution: Use a better wire<br><img src="http://i.imgur.com/1vazK2m.jpg" alt="2.pi"></p>
<h1 id="Improvements"><a href="#Improvements" class="headerlink" title="Improvements"></a>Improvements</h1><ol>
<li>I thought we can redesign the PCB,because they are too much wire to connect.</li>
<li>We should put radiator on the PCB board.</li>
</ol>
<h1 id="File-download"><a href="#File-download" class="headerlink" title="File download"></a>File download</h1><p><a href="http://archive.fabacademy.org/archives/2016/fablabshenzhen/students/426/1download/Week9_10-Code.zip" target="_blank" rel="external">Code Download</a></p>
<p><img src="http://i.imgur.com/AO9FQlB.png" alt=""><br>This work is licensed under a <a href="http://creativecommons.org/licenses/by/4.0/" target="_blank" rel="external">Creative Commons Attribution 4.0 International License</a>.</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Week8]]></title>
      <url>http://myfly.vip/2016/03/16/Week8/</url>
      <content type="html"><![CDATA[<h2 id="Embedded-Programming"><a href="#Embedded-Programming" class="headerlink" title="Embedded Programming"></a>Embedded Programming</h2><p><strong>Assignment</strong></p>
<ol>
<li>Read a microcontroller data sheet</li>
<li>Program your board to do something, with as many different programming languages and programming environments as possible</li>
</ol>
<h1 id="AVR"><a href="#AVR" class="headerlink" title="AVR"></a>AVR</h1><ul>
<li><a href="http://archive.fabacademy.org/archives/2016/fablabshenzhen/students/426/2016/03/16/AVR-Programming/" target="_blank" rel="external">AVR Programming</a>
</li>
</ul>
<h1 id="nRF51822-STM32-amp-Bluetooth"><a href="#nRF51822-STM32-amp-Bluetooth" class="headerlink" title="nRF51822(STM32 &amp; Bluetooth)"></a>nRF51822(STM32 &amp; Bluetooth)</h1><ul>
<li><a href="http://www.nordicsemi.com/eng/Products/Bluetooth-Smart-Bluetooth-low-energy/nRF51822/" target="_blank" rel="external">nRF51822 Datasheet</a></li>
<li><a href="http://archive.fabacademy.org/archives/2016/fablabshenzhen/students/426/2016/03/16/nrf51-a1/" target="_blank" rel="external">Example 1 - Blinky</a></li>
<li><a href="http://archive.fabacademy.org/archives/2016/fablabshenzhen/students/426/2016/03/16/nrf51-a2/" target="_blank" rel="external">Example 2 - System Clock and Delay</a></li>
<li><a href="http://archive.fabacademy.org/archives/2016/fablabshenzhen/students/426/2016/03/16/nrf51-a3/" target="_blank" rel="external">Example 3 - Key scan</a></li>
<li><a href="http://archive.fabacademy.org/archives/2016/fablabshenzhen/students/426/2016/03/16/nrf51-a4/" target="_blank" rel="external">Example 4 - Key and Interrupt</a></li>
<li><a href="http://archive.fabacademy.org/archives/2016/fablabshenzhen/students/426/2016/03/16/nrf51-a5/" target="_blank" rel="external">Example 5 - RTC and Compare</a></li>
<li><a href="http://archive.fabacademy.org/archives/2016/fablabshenzhen/students/426/2016/03/16/nrf51-a6/" target="_blank" rel="external">Example 6 - Timer</a></li>
<li><a href="http://archive.fabacademy.org/archives/2016/fablabshenzhen/students/426/2016/03/16/nrf51-a7/" target="_blank" rel="external">Example 7 - UART</a></li>
<li><a href="http://archive.fabacademy.org/archives/2016/fablabshenzhen/students/426/2016/03/16/nrf51-a8/" target="_blank" rel="external">Example 8 - Temperature</a> (To be contine)</li>
<li><a href="http://archive.fabacademy.org/archives/2016/fablabshenzhen/students/426/2016/03/16/nrf51-a9/" target="_blank" rel="external">Example 9 - PPI</a>
</li>
</ul>
<p><img src="http://i.imgur.com/AO9FQlB.png" alt=""><br>This work is licensed under a <a href="http://creativecommons.org/licenses/by/4.0/" target="_blank" rel="external">Creative Commons Attribution 4.0 International License</a>.</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[AVR Programming]]></title>
      <url>http://myfly.vip/2016/03/16/AVR-Programming/</url>
      <content type="html"><![CDATA[<p>Check “more” on the right!<br><a id="more"></a></p>
<h3 id="Make"><a href="#Make" class="headerlink" title="Make"></a>Make</h3><p>At first, I just download the “hello.ftdi.44.echo.c.make” and make,but something was wrong.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ make -f hello.ftdi.44.echo.c.make</div><div class="line">make: *** No rule to make target `hello.ftdi.44.echo.c&apos;, needed by `hello.ftdi.44.echo.out&apos;.  Stop.</div></pre></td></tr></table></figure>
<p>Then,I realize that I should download “hello.ftdi.44.echo.c” too.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">$ make -f hello.ftdi.44.echo.c.make</div><div class="line">avr-gcc -mmcu=attiny44 -Wall -Os -DF_CPU=20000000 -I./ -o hello.ftdi.44.echo.out hello.ftdi.44.echo.c</div><div class="line">avr-objcopy -O ihex hello.ftdi.44.echo.out hello.ftdi.44.echo.c.hex;\</div><div class="line">	avr-size --mcu=attiny44 --format=avr hello.ftdi.44.echo.out</div><div class="line">AVR Memory Usage</div><div class="line">----------------</div><div class="line">Device: attiny44</div><div class="line"></div><div class="line">Program:     758 bytes (18.5% Full)</div><div class="line">(.text + .data + .bootloader)</div><div class="line"></div><div class="line">Data:         64 bytes (25.0% Full)</div><div class="line">(.data + .bss + .noinit)</div></pre></td></tr></table></figure>
<h3 id="Make-fuses-with-USBTiny"><a href="#Make-fuses-with-USBTiny" class="headerlink" title="Make fuses with USBTiny"></a>Make fuses with USBTiny</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">$ sudo make -f hello.ftdi.44.echo.c.make program-usbtiny-fuses</div><div class="line">avr-objcopy -O ihex hello.ftdi.44.echo.out hello.ftdi.44.echo.c.hex;\</div><div class="line">	avr-size --mcu=attiny44 --format=avr hello.ftdi.44.echo.out</div><div class="line">AVR Memory Usage</div><div class="line">----------------</div><div class="line">Device: attiny44</div><div class="line"></div><div class="line">Program:     758 bytes (18.5% Full)</div><div class="line">(.text + .data + .bootloader)</div><div class="line"></div><div class="line">Data:         64 bytes (25.0% Full)</div><div class="line">(.data + .bss + .noinit)</div><div class="line"></div><div class="line"></div><div class="line">avrdude -p t44 -P usb -c usbtiny -U lfuse:w:0x5E:m</div><div class="line"></div><div class="line">avrdude: AVR device initialized and ready to accept instructions</div><div class="line"></div><div class="line">Reading | ################################################## | 100% 0.00s</div><div class="line"></div><div class="line">avrdude: Device signature = 0x1e9207</div><div class="line">avrdude: reading input file &quot;0x5E&quot;</div><div class="line">avrdude: writing lfuse (1 bytes):</div><div class="line"></div><div class="line">Writing | ################################################## | 100% 0.00s</div><div class="line"></div><div class="line">avrdude: 1 bytes of lfuse written</div><div class="line">avrdude: verifying lfuse memory against 0x5E:</div><div class="line">avrdude: load data lfuse data from input file 0x5E:</div><div class="line">avrdude: input file 0x5E contains 1 bytes</div><div class="line">avrdude: reading on-chip lfuse data:</div><div class="line"></div><div class="line">Reading | ################################################## | 100% 0.00s</div><div class="line"></div><div class="line">avrdude: verifying ...</div><div class="line">avrdude: 1 bytes of lfuse verified</div><div class="line"></div><div class="line">avrdude: safemode: Fuses OK (H:FF, E:DF, L:5E)</div><div class="line"></div><div class="line">avrdude done.  Thank you.</div></pre></td></tr></table></figure>
<h3 id="Make-Program-with-USBTiny"><a href="#Make-Program-with-USBTiny" class="headerlink" title="Make Program with USBTiny"></a>Make Program with USBTiny</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div></pre></td><td class="code"><pre><div class="line"> sudo make -f hello.ftdi.44.echo.c.make program-usbtiny</div><div class="line">avr-objcopy -O ihex hello.ftdi.44.echo.out hello.ftdi.44.echo.c.hex;\</div><div class="line">	avr-size --mcu=attiny44 --format=avr hello.ftdi.44.echo.out</div><div class="line">AVR Memory Usage</div><div class="line">----------------</div><div class="line">Device: attiny44</div><div class="line"></div><div class="line">Program:     758 bytes (18.5% Full)</div><div class="line">(.text + .data + .bootloader)</div><div class="line"></div><div class="line">Data:         64 bytes (25.0% Full)</div><div class="line">(.data + .bss + .noinit)</div><div class="line"></div><div class="line"></div><div class="line">avrdude -p t44 -P usb -c usbtiny -U flash:w:hello.ftdi.44.echo.c.hex</div><div class="line"></div><div class="line">avrdude: AVR device initialized and ready to accept instructions</div><div class="line"></div><div class="line">Reading | ################################################## | 100% 0.00s</div><div class="line"></div><div class="line">avrdude: Device signature = 0x1e9207</div><div class="line">avrdude: NOTE: &quot;flash&quot; memory has been specified, an erase cycle will be performed</div><div class="line">         To disable this feature, specify the -D option.</div><div class="line">avrdude: erasing chip</div><div class="line">avrdude: reading input file &quot;hello.ftdi.44.echo.c.hex&quot;</div><div class="line">avrdude: input file hello.ftdi.44.echo.c.hex auto detected as Intel Hex</div><div class="line">avrdude: writing flash (758 bytes):</div><div class="line"></div><div class="line">Writing | ################################################## | 100% 1.02s</div><div class="line"></div><div class="line">avrdude: 758 bytes of flash written</div><div class="line">avrdude: verifying flash memory against hello.ftdi.44.echo.c.hex:</div><div class="line">avrdude: load data flash data from input file hello.ftdi.44.echo.c.hex:</div><div class="line">avrdude: input file hello.ftdi.44.echo.c.hex auto detected as Intel Hex</div><div class="line">avrdude: input file hello.ftdi.44.echo.c.hex contains 758 bytes</div><div class="line">avrdude: reading on-chip flash data:</div><div class="line"></div><div class="line">Reading | ################################################## | 100% 1.40s</div><div class="line"></div><div class="line">avrdude: verifying ...</div><div class="line">avrdude: 758 bytes of flash verified</div><div class="line"></div><div class="line">avrdude: safemode: Fuses OK (H:FF, E:DF, L:5E)</div><div class="line"></div><div class="line">avrdude done.  Thank you.</div></pre></td></tr></table></figure>
<p><img src="http://i.imgur.com/AO9FQlB.png" alt=""><br>This work is licensed under a <a href="http://creativecommons.org/licenses/by/4.0/" target="_blank" rel="external">Creative Commons Attribution 4.0 International License</a>.</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[nRF51 Example 1 - Blinky]]></title>
      <url>http://myfly.vip/2016/03/16/nrf51-a1/</url>
      <content type="html"><![CDATA[<p>Source Demo:<br><img src="http://i.imgur.com/bBJ3I4J.gif" alt="loop1"></p>
<p>Download Link</p>
<p>My Demo:<br><img src="http://i.imgur.com/TRpGL3H.gif" alt="loop2"><br>Download Link</p>
<p>Please click “more” on the right!<br><a id="more"></a></p>
<h1 id="Tips"><a href="#Tips" class="headerlink" title="Tips:"></a>Tips:</h1><h3 id="1-Configure-LED-pins-as-outputs"><a href="#1-Configure-LED-pins-as-outputs" class="headerlink" title="1.Configure LED-pins as outputs"></a>1.Configure LED-pins as outputs</h3><p>nrf_gpio_cfg_output();</p>
<h3 id="2-Open-LED"><a href="#2-Open-LED" class="headerlink" title="2.Open LED"></a>2.Open LED</h3><p>nrf_gpio_pin_set();</p>
<h3 id="3-Close-LED"><a href="#3-Close-LED" class="headerlink" title="3.Close LED"></a>3.Close LED</h3><p>nrf_gpio_pin_clear();</p>
<h3 id="4-Toggle-LED"><a href="#4-Toggle-LED" class="headerlink" title="4.Toggle LED"></a>4.Toggle LED</h3><p>nrf_gpio_pin_toggle();</p>
<h3 id="5-Delay-with-millisecond"><a href="#5-Delay-with-millisecond" class="headerlink" title="5.Delay with millisecond"></a>5.Delay with millisecond</h3><p>nrf_delay_ms();</p>
<h1 id="Part-of-my-source-files"><a href="#Part-of-my-source-files" class="headerlink" title="Part of my source files"></a>Part of my source files</h1><h2 id="main-c"><a href="#main-c" class="headerlink" title="main.c"></a>main.c</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line">#include &lt;stdbool.h&gt;</div><div class="line">#include &lt;stdint.h&gt;</div><div class="line">#include &quot;nrf_delay.h&quot;</div><div class="line">#include &quot;nrf_gpio.h&quot;</div><div class="line">#include &quot;led.h&quot;</div><div class="line"></div><div class="line">/**</div><div class="line"> * @brief Function for application main entry.</div><div class="line"> */</div><div class="line">int main(void)</div><div class="line">&#123;</div><div class="line">	// Configure LED-pins as outputs</div><div class="line">	LED_Init();</div><div class="line">	while(true)</div><div class="line">	&#123;</div><div class="line">		int i;</div><div class="line">		for(i=17; i&lt;=20; i++)</div><div class="line">		&#123;</div><div class="line">			LED_Loop(i,250);</div><div class="line">		&#125;</div><div class="line">		for(i=19; i&gt;=16; i--)</div><div class="line">		&#123;</div><div class="line">			LED_Loop(i,250);</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="led-h"><a href="#led-h" class="headerlink" title="led.h"></a>led.h</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">#ifndef __LED_H</div><div class="line">#define	__LED_H</div><div class="line"></div><div class="line">#include &quot;nrf51.h&quot;</div><div class="line"></div><div class="line">#define LED_START      16</div><div class="line">#define LED_0          16</div><div class="line">#define LED_1          17</div><div class="line">#define LED_2          18</div><div class="line">#define LED_3          19</div><div class="line">#define LED_4          20</div><div class="line">#define LED_5          21</div><div class="line">#define LED_6          22</div><div class="line">#define LED_7          23</div><div class="line">#define LED_STOP       23</div><div class="line"></div><div class="line">void LED_Init(void);</div><div class="line">void LED_Open(int LED_X);</div><div class="line">void LED_Close(int LED_X);</div><div class="line">void LED_Toggle(int LED_X);</div><div class="line">void LED_Loop(int LED_X,int sec);</div><div class="line">#endif /* __LED_H */</div></pre></td></tr></table></figure>
<h2 id="led-c"><a href="#led-c" class="headerlink" title="led.c"></a>led.c</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line">#include &quot;nrf51.h&quot;</div><div class="line">#include &quot;nrf_gpio.h&quot;</div><div class="line">#include &quot;led.h&quot;</div><div class="line">#include &quot;nrf_delay.h&quot;</div><div class="line"></div><div class="line">void LED_Init(void)</div><div class="line">&#123;</div><div class="line">	int i;</div><div class="line">	for(i=16; i&lt;=20; i++)</div><div class="line">	&#123;</div><div class="line">		// Configure LED-pins as outputs</div><div class="line">		nrf_gpio_cfg_output(i);</div><div class="line">		nrf_gpio_pin_set(i);</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">void LED_Open(int LED_X)</div><div class="line">&#123;</div><div class="line">	nrf_gpio_pin_set(LED_X);</div><div class="line">&#125;</div><div class="line"></div><div class="line">void LED_Close(int LED_X)</div><div class="line">&#123;</div><div class="line">	nrf_gpio_pin_clear(LED_X);</div><div class="line">&#125;</div><div class="line"></div><div class="line">void LED_Toggle(int LED_X)</div><div class="line">&#123;</div><div class="line">	nrf_gpio_pin_toggle(LED_X);</div><div class="line">&#125;</div><div class="line"></div><div class="line">void LED_Loop(int LED_X, int sec)</div><div class="line">&#123;</div><div class="line">	nrf_gpio_pin_clear(LED_X);</div><div class="line">	nrf_delay_ms(sec);</div><div class="line">	nrf_gpio_pin_set(LED_X);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><a href="http://archive.fabacademy.org/archives/2016/fablabshenzhen/students/426/1download/e1.zip" target="_blank" rel="external">Download my files </a></p>
<p><img src="http://i.imgur.com/AO9FQlB.png" alt=""><br>This work is licensed under a <a href="http://creativecommons.org/licenses/by/4.0/" target="_blank" rel="external">Creative Commons Attribution 4.0 International License</a>.</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[nRF51 Example 2 - System Clock and Delay]]></title>
      <url>http://myfly.vip/2016/03/16/nrf51-a2/</url>
      <content type="html"><![CDATA[<p>Please click “more” on the right!<br><a id="more"></a></p>
<h1 id="Notes"><a href="#Notes" class="headerlink" title="Notes:"></a>Notes:</h1><p>system_nrf51.c</p>
<p>System Clock Frequency:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">#define __SYSTEM_CLOCK      (16000000UL)     /*!&lt; nRF51 devices use a fixed System Clock Frequency of 16MHz */</div></pre></td></tr></table></figure>
<p>Toolchain:<br>ARM RealView (armcc), IAR EWARM (iccarm), and GNU Compiler Collection (gcc).</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">#if defined ( __CC_ARM )//ARM RealView</div><div class="line">    uint32_t SystemCoreClock __attribute__((used)) = __SYSTEM_CLOCK;  </div><div class="line">#elif defined ( __ICCARM__ )//IAR EWARM</div><div class="line">    __root uint32_t SystemCoreClock = __SYSTEM_CLOCK;</div><div class="line">#elif defined   ( __GNUC__ )// GNU Compiler Collection(GCC)</div><div class="line">    uint32_t SystemCoreClock __attribute__((used)) = __SYSTEM_CLOCK;</div><div class="line">#endif</div></pre></td></tr></table></figure>
<h1 id="My-assignment"><a href="#My-assignment" class="headerlink" title="My assignment"></a>My assignment</h1><p>Create a function call <strong>nrf_delay_s</strong> to replace <strong>nrf_delay_ms</strong></p>
<h1 id="Part-of-my-source-files"><a href="#Part-of-my-source-files" class="headerlink" title="Part of my source files"></a>Part of my source files</h1><h2 id="main-c"><a href="#main-c" class="headerlink" title="main.c"></a>main.c</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">int main(void)</div><div class="line">&#123;</div><div class="line">	LED_Init();</div><div class="line">	while(1)</div><div class="line">	&#123;</div><div class="line">		LED_Toggle();</div><div class="line">		nrf_delay_s(1);</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="nrf-delay-c"><a href="#nrf-delay-c" class="headerlink" title="nrf_delay.c"></a>nrf_delay.c</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">void nrf_delay_ms(uint32_t volatile number_of_ms)</div><div class="line">&#123;</div><div class="line">    while(number_of_ms != 0)</div><div class="line">    &#123;</div><div class="line">        number_of_ms--;</div><div class="line">        nrf_delay_us(999);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">void nrf_delay_s(uint32_t volatile number_of_s)</div><div class="line">&#123;</div><div class="line">    while(number_of_s != 0)</div><div class="line">    &#123;</div><div class="line">        number_of_s--;</div><div class="line">        nrf_delay_ms(999);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><a href="http://archive.fabacademy.org/archives/2016/fablabshenzhen/students/426/1download/e2.zip" target="_blank" rel="external">Download my files </a></p>
<p><img src="http://i.imgur.com/AO9FQlB.png" alt=""><br>This work is licensed under a <a href="http://creativecommons.org/licenses/by/4.0/" target="_blank" rel="external">Creative Commons Attribution 4.0 International License</a>.</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[nRF51 Example 3 - Key scan]]></title>
      <url>http://myfly.vip/2016/03/16/nrf51-a3/</url>
      <content type="html"><![CDATA[<h1 id="My-Demo"><a href="#My-Demo" class="headerlink" title="My Demo"></a>My Demo</h1><p><img src="http://i.imgur.com/DMuZcbW.gif" alt="keyScan"><br>Please click “more” on the right!<br><a id="more"></a></p>
<h1 id="My-assignment"><a href="#My-assignment" class="headerlink" title="My assignment:"></a>My assignment:</h1><p>Change the <strong>Delay(10000)</strong> to <strong>nrf_delay_ms(20)</strong></p>
<h1 id="Part-of-my-source-files"><a href="#Part-of-my-source-files" class="headerlink" title="Part of my source files"></a>Part of my source files</h1><h2 id="key-c"><a href="#key-c" class="headerlink" title="key.c"></a>key.c</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line">#include &quot;key.h&quot;</div><div class="line">#include &quot;nrf_delay.h&quot;</div><div class="line"></div><div class="line">void KEY_Init(void)</div><div class="line">&#123;</div><div class="line">	//Configure GPIO pins as in Pullup input</div><div class="line">	nrf_gpio_cfg_input(21,NRF_GPIO_PIN_PULLUP);</div><div class="line">	nrf_gpio_cfg_input(22,NRF_GPIO_PIN_PULLUP);</div><div class="line">	nrf_gpio_cfg_input(23,NRF_GPIO_PIN_PULLUP);</div><div class="line">	nrf_gpio_cfg_input(30,NRF_GPIO_PIN_PULLUP);</div><div class="line">&#125;</div><div class="line"></div><div class="line">void Delay(uint32_t temp)</div><div class="line">&#123;</div><div class="line">	for(; temp!= 0; temp--) ;</div><div class="line">&#125;</div><div class="line"></div><div class="line">uint8_t KEY_Down(uint8_t KEY_X)</div><div class="line">&#123;</div><div class="line">	/*Check the Key  */</div><div class="line">	if( nrf_gpio_pin_read(KEY_X)== 0 )</div><div class="line">	&#123;</div><div class="line">		/*Delay for a while to prevent unexpected read*/</div><div class="line">		// Delay(10000);</div><div class="line">		nrf_delay_ms(20);</div><div class="line">		if(nrf_gpio_pin_read(KEY_X)== 0 )</div><div class="line">		&#123;</div><div class="line">			/*Wait for the Key released */</div><div class="line">			while(nrf_gpio_pin_read(KEY_X)== 0 );</div><div class="line">			return 0;</div><div class="line">		&#125;</div><div class="line">		else</div><div class="line">			return 1;</div><div class="line">	&#125;</div><div class="line">	else</div><div class="line">		return 1;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><a href="http://archive.fabacademy.org/archives/2016/fablabshenzhen/students/426/1download/e3.zip" target="_blank" rel="external">Download my files </a><br><img src="http://i.imgur.com/AO9FQlB.png" alt=""><br>This work is licensed under a <a href="http://creativecommons.org/licenses/by/4.0/" target="_blank" rel="external">Creative Commons Attribution 4.0 International License</a>.</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[nRF51 Example 4 - Key and Interrupt]]></title>
      <url>http://myfly.vip/2016/03/16/nrf51-a4/</url>
      <content type="html"><![CDATA[<h1 id="Source-work"><a href="#Source-work" class="headerlink" title="Source work"></a>Source work</h1><p>A key and an Interrupt</p>
<h1 id="My-assignment"><a href="#My-assignment" class="headerlink" title="My assignment:"></a>My assignment:</h1><p>And other 3 keys and Interrupts</p>
<p>Please click “more” on the right!<br><a id="more"></a></p>
<h1 id="Part-of-my-source-files"><a href="#Part-of-my-source-files" class="headerlink" title="Part of my source files"></a>Part of my source files</h1><h2 id="exit-c"><a href="#exit-c" class="headerlink" title="exit.c"></a>exit.c</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div></pre></td><td class="code"><pre><div class="line">void EXIT_KEY_Init(void)</div><div class="line">&#123;</div><div class="line"></div><div class="line">	nrf_gpio_cfg_input(KEY_1,GPIO_PIN_CNF_PULL_Pullup);</div><div class="line">	nrf_gpio_cfg_input(KEY_2,GPIO_PIN_CNF_PULL_Pullup);</div><div class="line">	nrf_gpio_cfg_input(KEY_3,GPIO_PIN_CNF_PULL_Pullup);</div><div class="line">	nrf_gpio_cfg_input(KEY_4,GPIO_PIN_CNF_PULL_Pullup);</div><div class="line"></div><div class="line"></div><div class="line">	NVIC_EnableIRQ(GPIOTE_IRQn);</div><div class="line"></div><div class="line">	NRF_GPIOTE-&gt;CONFIG[0] =  (GPIOTE_CONFIG_POLARITY_HiToLo &lt;&lt; GPIOTE_CONFIG_POLARITY_Pos)</div><div class="line">	                        | (30 &lt;&lt; GPIOTE_CONFIG_PSEL_Pos)</div><div class="line">	                        | (GPIOTE_CONFIG_MODE_Event &lt;&lt; GPIOTE_CONFIG_MODE_Pos);</div><div class="line">	NRF_GPIOTE-&gt;INTENSET  = GPIOTE_INTENSET_IN0_Set &lt;&lt; GPIOTE_INTENSET_IN0_Pos;</div><div class="line"></div><div class="line"></div><div class="line">	NRF_GPIOTE-&gt;CONFIG[1] = (GPIOTE_CONFIG_POLARITY_HiToLo &lt;&lt; GPIOTE_CONFIG_POLARITY_Pos)</div><div class="line">	                        |(21 &lt;&lt; GPIOTE_CONFIG_PSEL_Pos)</div><div class="line">	                        |(GPIOTE_CONFIG_MODE_Event &lt;&lt; GPIOTE_CONFIG_MODE_Pos);</div><div class="line">	NRF_GPIOTE-&gt;INTENSET = GPIOTE_INTENSET_IN1_Set &lt;&lt; GPIOTE_INTENSET_IN1_Pos;</div><div class="line"></div><div class="line"></div><div class="line">	NRF_GPIOTE-&gt;CONFIG[2] = (GPIOTE_CONFIG_POLARITY_HiToLo &lt;&lt; GPIOTE_CONFIG_POLARITY_Pos)</div><div class="line">	                        |(22 &lt;&lt; GPIOTE_CONFIG_PSEL_Pos)</div><div class="line">	                        |(GPIOTE_CONFIG_MODE_Event &lt;&lt; GPIOTE_CONFIG_MODE_Pos);</div><div class="line">	NRF_GPIOTE-&gt;INTENSET = GPIOTE_INTENSET_IN2_Set &lt;&lt; GPIOTE_INTENSET_IN2_Pos;</div><div class="line"></div><div class="line"></div><div class="line">	NRF_GPIOTE-&gt;CONFIG[3] = (GPIOTE_CONFIG_POLARITY_HiToLo &lt;&lt; GPIOTE_CONFIG_POLARITY_Pos)</div><div class="line">	                        |(23 &lt;&lt; GPIOTE_CONFIG_PSEL_Pos)</div><div class="line">	                        |(GPIOTE_CONFIG_MODE_Event &lt;&lt; GPIOTE_CONFIG_MODE_Pos);</div><div class="line">	NRF_GPIOTE-&gt;INTENSET = GPIOTE_INTENSET_IN3_Set &lt;&lt; GPIOTE_INTENSET_IN3_Pos;</div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line">void GPIOTE_IRQHandler(void)</div><div class="line">&#123;</div><div class="line"></div><div class="line">	if ((NRF_GPIOTE-&gt;EVENTS_IN[0] == 1) &amp;&amp;</div><div class="line">	    (NRF_GPIOTE-&gt;INTENSET &amp; GPIOTE_INTENSET_IN0_Msk))</div><div class="line">	&#123;</div><div class="line">		NRF_GPIOTE-&gt;EVENTS_IN[0] = 0;</div><div class="line">		LED_Toggle(LED_0);</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	if ((NRF_GPIOTE-&gt;EVENTS_IN[1] == 1)&amp;&amp;</div><div class="line">	    (NRF_GPIOTE-&gt;INTENSET &amp; GPIOTE_INTENSET_IN1_Msk))</div><div class="line">			&#123;</div><div class="line">		NRF_GPIOTE-&gt;EVENTS_IN[1] = 0;</div><div class="line">		LED_Toggle(LED_1);</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	if ((NRF_GPIOTE-&gt;EVENTS_IN[2] == 1)&amp;&amp;</div><div class="line">	    (NRF_GPIOTE-&gt;INTENSET &amp; GPIOTE_INTENSET_IN2_Msk))</div><div class="line">			&#123;</div><div class="line">		NRF_GPIOTE-&gt;EVENTS_IN[2] = 0;</div><div class="line">		LED_Toggle(LED_2);</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	if ((NRF_GPIOTE-&gt;EVENTS_IN[3] == 1)&amp;&amp;</div><div class="line">	    (NRF_GPIOTE-&gt;INTENSET &amp; GPIOTE_INTENSET_IN3_Msk))</div><div class="line">			&#123;</div><div class="line">		NRF_GPIOTE-&gt;EVENTS_IN[3] = 0;</div><div class="line">		LED_Toggle(LED_3);</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><a href="http://archive.fabacademy.org/archives/2016/fablabshenzhen/students/426/1download/e4.zip" target="_blank" rel="external">Download my files </a></p>
<p><img src="http://i.imgur.com/AO9FQlB.png" alt=""><br>This work is licensed under a <a href="http://creativecommons.org/licenses/by/4.0/" target="_blank" rel="external">Creative Commons Attribution 4.0 International License</a>.</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[nRF51 Example 5 - RTC and Compare]]></title>
      <url>http://myfly.vip/2016/03/16/nrf51-a5/</url>
      <content type="html"><![CDATA[<h1 id="Source-Demo"><a href="#Source-Demo" class="headerlink" title="Source Demo:"></a>Source Demo:</h1><p><img src="http://i.imgur.com/LdAIj1p.gif" alt="RT"></p>
<h1 id="My-Demo"><a href="#My-Demo" class="headerlink" title="My Demo:"></a>My Demo:</h1><p>Add a RTC and a Compare to control blinking.<br><img src="http://i.imgur.com/4uRu5yi.gif" alt="RT"></p>
<p>Please click “more” on the right!<br><a id="more"></a></p>
<h1 id="Part-of-my-source-files"><a href="#Part-of-my-source-files" class="headerlink" title="Part of my source files"></a>Part of my source files</h1><h2 id="rtc-c"><a href="#rtc-c" class="headerlink" title="rtc.c"></a>rtc.c</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div></pre></td><td class="code"><pre><div class="line">#include &quot;nrf51.h&quot;</div><div class="line">#include &quot;nrf_gpio.h&quot;</div><div class="line">#include &quot;rtc.h&quot;</div><div class="line">#include &quot;led.h&quot;</div><div class="line">#include &lt;stdbool.h&gt;</div><div class="line"></div><div class="line">#define LFCLK_FREQUENCY           (32768UL)                               /**&lt; LFCLK频率为HZ. */</div><div class="line">#define RTC_FREQUENCY             (8UL)                                   /**&lt; 所需的RTC工作时钟 RTC_FREQUENCY 为HZ. */</div><div class="line">#define COMPARE_COUNTERTIME       (1UL)                                   /**&lt; 比较参数值Get Compare event COMPARE_TIME seconds after the counter starts from 0. */</div><div class="line">#define COUNTER_PRESCALER         ((LFCLK_FREQUENCY/RTC_FREQUENCY) - 1)   /* f = LFCLK/(prescaler + 1) */</div><div class="line"></div><div class="line"></div><div class="line">/** @brief 启动内部LFCLK晶振功能</div><div class="line"> */</div><div class="line"> void lfclk_config(void)</div><div class="line">&#123;</div><div class="line">    NRF_CLOCK-&gt;LFCLKSRC             = (CLOCK_LFCLKSRC_SRC_Xtal &lt;&lt; CLOCK_LFCLKSRC_SRC_Pos);//配置低频时钟为外部低频时钟</div><div class="line">    // NRF_CLOCK-&gt;EVENTS_LFCLKSTARTED  = 0;//关掉低频输出</div><div class="line">    // NRF_CLOCK-&gt;EVENTS_HFCLKSTARTED  = 0;//关掉低频输出</div><div class="line">    NRF_CLOCK-&gt;TASKS_LFCLKSTART     = 1;//开始低频输入</div><div class="line">    while (NRF_CLOCK-&gt;EVENTS_LFCLKSTARTED == 0)</div><div class="line">    &#123;</div><div class="line">        //Do nothing.</div><div class="line">    &#125;</div><div class="line">    // NRF_CLOCK-&gt;EVENTS_LFCLKSTARTED = 0;//如果有输出立即关掉</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line">/** @brief Function for configuring the RTC with TICK to 100Hz and COMPARE0 to 10 sec.</div><div class="line"> */</div><div class="line"> void rtc_config(void)</div><div class="line">&#123;</div><div class="line">    NVIC_EnableIRQ(RTC0_IRQn);                                      // 使能 RTC中断.</div><div class="line">    NRF_RTC0-&gt;PRESCALER     = COUNTER_PRESCALER;                    // 设置预分频值prescaler to a TICK of RTC_FREQUENCY.</div><div class="line">    NRF_RTC0-&gt;CC[0]         = COMPARE_COUNTERTIME * RTC_FREQUENCY;  //比较器频率 Compare0 after approx COMPARE_COUNTERTIME seconds.</div><div class="line"></div><div class="line">    // Enable TICK event and TICK interrupt:</div><div class="line">    NRF_RTC0-&gt;EVTENSET      = RTC_EVTENSET_TICK_Msk;</div><div class="line">    NRF_RTC0-&gt;INTENSET      = RTC_INTENSET_TICK_Msk;</div><div class="line"></div><div class="line">    // Enable COMPARE0 event and COMPARE0 interrupt:</div><div class="line">    NRF_RTC0-&gt;EVTENSET      = RTC_EVTENSET_COMPARE0_Msk;</div><div class="line">    NRF_RTC0-&gt;INTENSET      = RTC_INTENSET_COMPARE0_Msk;</div><div class="line"></div><div class="line"></div><div class="line">    NVIC_EnableIRQ(RTC1_IRQn);                                      // 使能 RTC中断.</div><div class="line">    NRF_RTC1-&gt;PRESCALER     = COUNTER_PRESCALER;                    // 设置预分频值prescaler to a TICK of RTC_FREQUENCY.</div><div class="line">    NRF_RTC1-&gt;CC[1]         = RTC_FREQUENCY;  //比较器频率 Compare0 after approx COMPARE_COUNTERTIME seconds.</div><div class="line"></div><div class="line">    // Enable TICK event and TICK interrupt:</div><div class="line">    NRF_RTC1-&gt;EVTENSET      = RTC_EVTENSET_TICK_Msk;</div><div class="line">    NRF_RTC1-&gt;INTENSET      = RTC_INTENSET_TICK_Msk;</div><div class="line"></div><div class="line">    // Enable COMPARE0 event and COMPARE0 interrupt:</div><div class="line">    NRF_RTC1-&gt;EVTENSET      = RTC_EVTENSET_COMPARE1_Msk;</div><div class="line">    NRF_RTC1-&gt;INTENSET      = RTC_INTENSET_COMPARE1_Msk;</div><div class="line">&#125;</div><div class="line"></div><div class="line">/** @brief: Function for handling the RTC0 interrupts.</div><div class="line"> * Triggered on TICK and COMPARE0 match.触发TICK和比较事件</div><div class="line"> */</div><div class="line">void RTC0_IRQHandler()</div><div class="line">&#123;</div><div class="line">    if ((NRF_RTC0-&gt;EVENTS_TICK != 0) &amp;&amp;</div><div class="line">        ((NRF_RTC0-&gt;INTENSET &amp; RTC_INTENSET_TICK_Msk) != 0))</div><div class="line">    &#123;</div><div class="line">        NRF_RTC0-&gt;EVENTS_TICK = 0;</div><div class="line">        LED_Toggle(LED_1);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    if ((NRF_RTC0-&gt;EVENTS_COMPARE[0] != 0) &amp;&amp;</div><div class="line">        ((NRF_RTC0-&gt;INTENSET &amp; RTC_INTENSET_COMPARE0_Msk) != 0))</div><div class="line">    &#123;</div><div class="line">        NRF_RTC0-&gt;EVENTS_COMPARE[0] = 0;</div><div class="line">        LED_Toggle(LED_2);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">void RTC1_IRQHandler()</div><div class="line">&#123;</div><div class="line">    if ((NRF_RTC1-&gt;EVENTS_TICK != 0) &amp;&amp;</div><div class="line">        ((NRF_RTC1-&gt;INTENSET &amp; RTC_INTENSET_TICK_Msk) != 0))</div><div class="line">    &#123;</div><div class="line">        NRF_RTC1-&gt;EVENTS_TICK = 0;</div><div class="line">        LED_Toggle(LED_3);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    if ((NRF_RTC0-&gt;EVENTS_COMPARE[1] != 0) &amp;&amp;</div><div class="line">        ((NRF_RTC0-&gt;INTENSET &amp; RTC_INTENSET_COMPARE0_Msk) != 0))</div><div class="line">    &#123;</div><div class="line">        NRF_RTC1-&gt;EVENTS_COMPARE[1] = 0;</div><div class="line">        NRF_RTC1-&gt;CC[1] += RTC_FREQUENCY;</div><div class="line">        LED_Toggle(LED_3);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><a href="http://archive.fabacademy.org/archives/2016/fablabshenzhen/students/426/1download/e5.zip" target="_blank" rel="external">Download my files </a></p>
<p><img src="http://i.imgur.com/AO9FQlB.png" alt=""><br>This work is licensed under a <a href="http://creativecommons.org/licenses/by/4.0/" target="_blank" rel="external">Creative Commons Attribution 4.0 International License</a>.</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[nRF51 Example 6 - Timer]]></title>
      <url>http://myfly.vip/2016/03/16/nrf51-a6/</url>
      <content type="html"><![CDATA[<h1 id="Source-Demo"><a href="#Source-Demo" class="headerlink" title="Source Demo"></a>Source Demo</h1><p><img src="http://i.imgur.com/MTmF4pt.gif" alt="time1"></p>
<h1 id="My-Demo"><a href="#My-Demo" class="headerlink" title="My Demo"></a>My Demo</h1><p>Add 2 LED<br><img src="http://i.imgur.com/hHU5Mtm.gif" alt="time2"></p>
<p>Please click “more” on the right!<br><a id="more"></a></p>
<h1 id="Part-of-my-source-files"><a href="#Part-of-my-source-files" class="headerlink" title="Part of my source files"></a>Part of my source files</h1><h2 id="main-c"><a href="#main-c" class="headerlink" title="main.c"></a>main.c</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">int main(void)</div><div class="line">&#123;</div><div class="line">    //</div><div class="line">	 LED_Init();</div><div class="line"></div><div class="line">    while (1)</div><div class="line">    &#123;</div><div class="line">        LED_Toggle(LED_1);</div><div class="line">        //使用定时器0产生1s定时</div><div class="line">        nrf_timer_delay_ms(TIMER0, TIMER_DELAY_MS);</div><div class="line"></div><div class="line">        LED_Toggle(LED_2);</div><div class="line">        // 使用定时器1产生1s定时</div><div class="line">        nrf_timer_delay_ms(TIMER1, TIMER_DELAY_MS);</div><div class="line"></div><div class="line">        LED_Toggle(LED_3);</div><div class="line">        // 使用定时器2产生1s定时</div><div class="line">        nrf_timer_delay_ms(TIMER2, TIMER_DELAY_MS);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><a href="http://archive.fabacademy.org/archives/2016/fablabshenzhen/students/426/1download/e6.zip" target="_blank" rel="external">Download my files </a></p>
<p><img src="http://i.imgur.com/AO9FQlB.png" alt=""><br>This work is licensed under a <a href="http://creativecommons.org/licenses/by/4.0/" target="_blank" rel="external">Creative Commons Attribution 4.0 International License</a>.</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[nRF51 Example 7 - UART]]></title>
      <url>http://myfly.vip/2016/03/16/nrf51-a7/</url>
      <content type="html"><![CDATA[<h1 id="My-Demo"><a href="#My-Demo" class="headerlink" title="My Demo"></a>My Demo</h1><p>Add a button to send a message.<br><img src="http://i.imgur.com/395yZdJ.gif" alt="UART"></p>
<p>Please click “more” on the right!<br><a id="more"></a><br>Remember to check the “Options for Target -&gt;Code Generation-&gt;Use MicroLIB”.</p>
<p><img src="http://i.imgur.com/4Glq3Mu.jpg" alt=""><br><a href="http://archive.fabacademy.org/archives/2016/fablabshenzhen/students/426/1download/e7.zip" target="_blank" rel="external">Download my files </a></p>
<p><img src="http://i.imgur.com/AO9FQlB.png" alt=""><br>This work is licensed under a <a href="http://creativecommons.org/licenses/by/4.0/" target="_blank" rel="external">Creative Commons Attribution 4.0 International License</a>.</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[nRF51 Example 8 - Temperature]]></title>
      <url>http://myfly.vip/2016/03/16/nrf51-a8/</url>
      <content type="html"><![CDATA[<p>to be contine…<br><a id="more"></a></p>
<p><img src="http://i.imgur.com/AO9FQlB.png" alt=""><br>This work is licensed under a <a href="http://creativecommons.org/licenses/by/4.0/" target="_blank" rel="external">Creative Commons Attribution 4.0 International License</a>.</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[nRF51 Example 9 - PPI]]></title>
      <url>http://myfly.vip/2016/03/16/nrf51-a9/</url>
      <content type="html"><![CDATA[<h1 id="Source-Demo"><a href="#Source-Demo" class="headerlink" title="Source Demo"></a>Source Demo</h1><p><img src="http://i.imgur.com/28Se3gO.gif" alt="ppi0"></p>
<h1 id="My-Demo"><a href="#My-Demo" class="headerlink" title="My Demo"></a>My Demo</h1><p>Add Serial Port to feedback data.<br><img src="http://i.imgur.com/EEa7BG1.gif" alt="ppi"></p>
<p>Please click “more” on the right!<br><a id="more"></a></p>
<h1 id="Part-of-my-source-files"><a href="#Part-of-my-source-files" class="headerlink" title="Part of my source files"></a>Part of my source files</h1><h2 id="main-c"><a href="#main-c" class="headerlink" title="main.c"></a>main.c</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div></pre></td><td class="code"><pre><div class="line">#include &quot;nrf51.h&quot;</div><div class="line">#include  &quot;led.h&quot;</div><div class="line">#include  &quot;time.h&quot;</div><div class="line">#include  &quot;ppi.h&quot;</div><div class="line">#include &quot;nrf_delay.h&quot;</div><div class="line">#include &quot;nrf_gpio.h&quot;</div><div class="line">#include &quot;uart.h&quot;</div><div class="line"></div><div class="line">int main(void)</div><div class="line">&#123;</div><div class="line">    uint8_t lastCC0;</div><div class="line">    bool isStop;</div><div class="line">    timer0_init();  </div><div class="line">    timer1_init();  </div><div class="line">    timer2_init();  </div><div class="line">    ppi_init();     </div><div class="line">    USART_Configuration();</div><div class="line"></div><div class="line">    NRF_POWER-&gt;TASKS_CONSTLAT = 1;</div><div class="line"></div><div class="line">    // Start clock.</div><div class="line">    NRF_TIMER1-&gt;TASKS_START = 1;</div><div class="line">    NRF_TIMER2-&gt;TASKS_START = 1;</div><div class="line"></div><div class="line">    nrf_gpio_range_cfg_output(LED_START, LED_STOP);</div><div class="line">    printf(&quot;Hi Fabacademy!\r\n&quot;);</div><div class="line"></div><div class="line">    while (1)</div><div class="line">    &#123;</div><div class="line">        NRF_TIMER0-&gt;TASKS_COUNT         = 1;</div><div class="line">        NRF_TIMER0-&gt;TASKS_CAPTURE[0]    = 1;</div><div class="line"></div><div class="line">        if ((uint8_t)NRF_TIMER0-&gt;CC[0] == lastCC0) &#123;</div><div class="line">          //Task was stopped!</div><div class="line">          if (!isStop) &#123;</div><div class="line">              isStop = 1;</div><div class="line">              printf(&quot;Task was stopped! \r\n&quot;);</div><div class="line">          &#125;</div><div class="line"></div><div class="line">        &#125;else&#123;</div><div class="line">          //Task is Running!</div><div class="line">          isStop = 0;</div><div class="line">          printf(&quot;Task was started! \r\n&quot;);</div><div class="line">          printf(&quot;CC[0] value is %u \r\n&quot;,(uint8_t)NRF_TIMER0-&gt;CC[0]);</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        lastCC0 = (uint8_t)NRF_TIMER0-&gt;CC[0];</div><div class="line"></div><div class="line">        nrf_gpio_port_write(NRF_GPIO_PORT_SELECT_PORT2, (uint8_t)NRF_TIMER0-&gt;CC[0]);</div><div class="line"></div><div class="line">        nrf_delay_ms(50);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><a href="http://archive.fabacademy.org/archives/2016/fablabshenzhen/students/426/1download/e8.zip" target="_blank" rel="external">Download my files </a></p>
<p><img src="http://i.imgur.com/AO9FQlB.png" alt=""><br>This work is licensed under a <a href="http://creativecommons.org/licenses/by/4.0/" target="_blank" rel="external">Creative Commons Attribution 4.0 International License</a>.</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Week7]]></title>
      <url>http://myfly.vip/2016/03/09/Week7/</url>
      <content type="html"><![CDATA[<h2 id="Computer-Controlled-Machining"><a href="#Computer-Controlled-Machining" class="headerlink" title="Computer Controlled Machining"></a>Computer Controlled Machining</h2><p><strong>Assignment</strong></p>
<h1 id="make-something-big"><a href="#make-something-big" class="headerlink" title="make something big"></a>make something big</h1><ul>
<li><a href="http://archive.fabacademy.org/archives/2016/fablabshenzhen/students/426/2016/03/09/chair/" target="_blank" rel="external">My Chair</a>
<img src="http://i.imgur.com/Xm68cmH.jpg" alt=""></li>
</ul>
<p><img src="http://i.imgur.com/AO9FQlB.png" alt=""><br>This work is licensed under a <a href="http://creativecommons.org/licenses/by/4.0/" target="_blank" rel="external">Creative Commons Attribution 4.0 International License</a>.</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Chair]]></title>
      <url>http://myfly.vip/2016/03/09/chair/</url>
      <content type="html"><![CDATA[<p><img src="http://i.imgur.com/Xm68cmH.jpg" alt=""><br><a id="more"></a></p>
<h1 id="Draw-Construction"><a href="#Draw-Construction" class="headerlink" title="Draw Construction"></a>Draw Construction</h1><p><img src="http://i.imgur.com/m6Y7Lp4.jpg" alt=""></p>
<h1 id="Make-some-holes"><a href="#Make-some-holes" class="headerlink" title="Make some holes"></a>Make some holes</h1><p><img src="http://i.imgur.com/ViOXNU0.jpg" alt=""></p>
<h1 id="Design-the-chair-legs"><a href="#Design-the-chair-legs" class="headerlink" title="Design the chair legs"></a>Design the chair legs</h1><p><img src="http://i.imgur.com/csiSyUY.jpg" alt=""><br><img src="http://i.imgur.com/fnvx2Tk.jpg" alt=""><br><img src="http://i.imgur.com/S7k8FZR.jpg" alt=""></p>
<h1 id="Optimize"><a href="#Optimize" class="headerlink" title="Optimize"></a>Optimize</h1><p><img src="http://i.imgur.com/onfaLaA.jpg" alt=""></p>
<h1 id="Manufacture"><a href="#Manufacture" class="headerlink" title="Manufacture"></a>Manufacture</h1><p>The CNC Machine in Szoil is broken,so we find another CNC machine at other place.<br>This machine is SW1325,<br>I use 20mm medium density fiberboard（MDF)<br>Endmill diameter: 4.00<br>Endmill blade height: 30.00<br>the speed is 5000 millimeter/min<br><img src="http://i.imgur.com/KA7jZbk.jpg" alt=""><br>Set the original point<br><img src="http://i.imgur.com/ZQKtlsU.jpg" alt=""><br><img src="http://i.imgur.com/L6SuVuN.gif" alt=""></p>
<h1 id="Polishing"><a href="#Polishing" class="headerlink" title="Polishing"></a>Polishing</h1><p><img src="http://i.imgur.com/m5tc3Yd.jpg" alt=""></p>
<h1 id="Hand-Mode"><a href="#Hand-Mode" class="headerlink" title="Hand Mode"></a>Hand Mode</h1><p><img src="http://i.imgur.com/3MKkBUZ.jpg" alt=""><br><img src="http://i.imgur.com/svnNuqT.jpg" alt=""></p>
<p><img src="http://i.imgur.com/QNxowQa.jpg" alt=""></p>
<h1 id="Chair-Mode"><a href="#Chair-Mode" class="headerlink" title="Chair Mode"></a>Chair Mode</h1><p><img src="http://i.imgur.com/Xm68cmH.jpg" alt=""><br><img src="http://i.imgur.com/ib7jBZi.jpg" alt=""></p>
<p><a href="http://archive.fabacademy.org/archives/2016/fablabshenzhen/students/426/1download/chair.zip" target="_blank" rel="external">Files Download</a></p>
<p><img src="http://i.imgur.com/AO9FQlB.png" alt=""><br>This work is licensed under a <a href="http://creativecommons.org/licenses/by/4.0/" target="_blank" rel="external">Creative Commons Attribution 4.0 International License</a>.</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Week6]]></title>
      <url>http://myfly.vip/2016/03/02/Week6/</url>
      <content type="html"><![CDATA[<h2 id="Electronics-Design"><a href="#Electronics-Design" class="headerlink" title="Electronics Design"></a>Electronics Design</h2><p><strong>Assignment</strong><br>Redraw the echo hello-world board</p>
<ol>
<li>Add (at least) a button and LED (with current-limiting resistor)</li>
<li>Check the design rules, and make it</li>
<li>Extra credit: simulate its operation<a id="more"></a>
</li>
</ol>
<h1 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h1><p>This week,I try to redraw a PCB board base on hello-world board.I will add a button and LED,and hope to control the LED by button in future.I see most of people use Eagle PCB Design Software, so I use the software too,and there is a wonderful library about the devices,call <a href="http://archive.fabacademy.org/archives/2016/doc/electronics/fab.lbr" target="_blank" rel="external">Fab.lbr</a></p>
<h1 id="1-Download-Eagle"><a href="#1-Download-Eagle" class="headerlink" title="1 Download Eagle"></a>1 Download Eagle</h1><p>You can download software from here <a href="https://cadsoft.io/" target="_blank" rel="external">Eagle</a>,but I use the old version.</p>
<h1 id="2-Download-Fab-lbr"><a href="#2-Download-Fab-lbr" class="headerlink" title="2 Download Fab.lbr"></a>2 Download Fab.lbr</h1><p>You can download Library from here <a href="http://archive.fabacademy.org/archives/2016/doc/electronics/fab.lbr" target="_blank" rel="external">Fab.lbr</a>.</p>
<blockquote>

</blockquote>
<h1 id="3-Use-the-Fab-lbr"><a href="#3-Use-the-Fab-lbr" class="headerlink" title="3 Use the Fab.lbr"></a>3 Use the Fab.lbr</h1><p>‘Library’-&gt;’USE’-&gt;Open”Fab.lbr”</p>
<blockquote>

</blockquote>
<h1 id="4-Sketch-the-Schematic"><a href="#4-Sketch-the-Schematic" class="headerlink" title="4 Sketch the Schematic"></a>4 Sketch the Schematic</h1><p>The Schematic is base on <a href="http://fabacademy.org/archives/2014/students/figueiredo.tiago/assignments/week6.html" target="_blank" rel="external">Tiago Figueiredo</a><br>He add a button,a led and a resistor for LED.The resistor is a passive two-terminal electrical component,it used to reduce current flow,and prevent the LED ruin.</p>
<blockquote>

</blockquote>
<h1 id="5-Finish-the-PCB"><a href="#5-Finish-the-PCB" class="headerlink" title="5 Finish the PCB"></a>5 Finish the PCB</h1><blockquote>

</blockquote>
<h1 id="6-Save-as-png"><a href="#6-Save-as-png" class="headerlink" title="6 Save as png."></a>6 Save as png.</h1><p>At First,I output with 150 dpi,and it looks awful.</p>
<blockquote>


</blockquote>
<p>At I compare the other board,I find my output dpi is to low,so I change it to 2000dpi.</p>
<blockquote>

</blockquote>
<p>Now,it looks better!</p>
<blockquote>

</blockquote>
<h1 id="7-Use-FabMoulde-and-mill-the-board"><a href="#7-Use-FabMoulde-and-mill-the-board" class="headerlink" title="7 Use FabMoulde and mill the board."></a>7 Use FabMoulde and mill the board.</h1><blockquote>

</blockquote>
<h1 id="8-Assembly-the-board"><a href="#8-Assembly-the-board" class="headerlink" title="8 Assembly the board"></a>8 Assembly the board</h1><blockquote>

</blockquote>
<p><a href="http://archive.fabacademy.org/archives/2016/fablabshenzhen/students/426/1download/MyfHelloWorld.zip" target="_blank" rel="external">Download my Hello World board (Eagle Files) </a></p>
<p><img src="http://i.imgur.com/AO9FQlB.png" alt=""><br>This work is licensed under a <a href="http://creativecommons.org/licenses/by/4.0/" target="_blank" rel="external">Creative Commons Attribution 4.0 International License</a>.</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Week5]]></title>
      <url>http://myfly.vip/2016/02/24/Week5/</url>
      <content type="html"><![CDATA[<h2 id="3D-Scanning-and-Printing"><a href="#3D-Scanning-and-Printing" class="headerlink" title="3D Scanning and Printing"></a>3D Scanning and Printing</h2><p><strong>Assignment</strong></p>
<ol>
<li>test the design rules for your printer(s) (group project)</li>
<li>design and 3D print an object (small, few cm) that could not be made subtractively</li>
<li>3D scan an object (and optionally print it) (extra credit: make your own scanner)</li>
</ol>
<ul>
<li><a href="http://archive.fabacademy.org/archives/2016/fablabshenzhen/students/426/2016/02/24/3D-Printer/" target="_blank" rel="external">3D Printer</a></li>
<li><a href="http://archive.fabacademy.org/archives/2016/fablabshenzhen/students/426/2016/02/24/3D-Scanner/" target="_blank" rel="external">3D Scanner</a>
</li>
</ul>
<p><img src="http://i.imgur.com/AO9FQlB.png" alt=""><br>This work is licensed under a <a href="http://creativecommons.org/licenses/by/4.0/" target="_blank" rel="external">Creative Commons Attribution 4.0 International License</a>.</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[3D Printer]]></title>
      <url>http://myfly.vip/2016/02/24/3D-Printer/</url>
      <content type="html"><![CDATA[
<a id="more"></a>
<p>I want to make a dice to play,so I try to design a dice and print by 3D Printer<br>I don’t want to make the object subtractively,because it has 6 faces,it complex to subtract 6 faces.</p>
<h1 id="Create-a-cube"><a href="#Create-a-cube" class="headerlink" title="Create a cube"></a>Create a cube</h1><p>The dice looks like a cube<br></p>
<h1 id="Modify-gt-Fillet"><a href="#Modify-gt-Fillet" class="headerlink" title="Modify-&gt;Fillet"></a>Modify-&gt;Fillet</h1><p>It makes dice smooth.<br></p>
<h1 id="Sketch-gt-Circle"><a href="#Sketch-gt-Circle" class="headerlink" title="Sketch-&gt;Circle"></a>Sketch-&gt;Circle</h1><p>Draw so circle as sign<br></p>
<h1 id="Modify-gt-Press-Pull"><a href="#Modify-gt-Press-Pull" class="headerlink" title="Modify-&gt;Press Pull"></a>Modify-&gt;Press Pull</h1><p>Make some holes<br></p>
<h1 id="Modify-gt-Fillet-1"><a href="#Modify-gt-Fillet-1" class="headerlink" title="Modify-&gt;Fillet"></a>Modify-&gt;Fillet</h1><p>Make the holes looks smooth<br></p>
<h1 id="3D-printer-test"><a href="#3D-printer-test" class="headerlink" title="3D printer test"></a>3D printer test</h1><p>for the printer we used in SZOIL, it has a typical XY moving axis, where the extruder fit in. The z-axis is the platform (or printing base) that goes from top to bottom (form Max to zero position)</p>
<ol>
<li>check 3D  printer visually,make sure everything works</li>
<li>check printing platform:　<br>rise into maximum position(z-axis), go disable all stepper motor (make sure the extruder goes freely), then moving the extruder from X0 to Xmax, then Y0 to Ymax. Leave a gap of business card between the platform and the extruder nozzle.</li>
</ol>
<ul>
<li>Lubricate the moving rail if necessary.<br><img src="http://i.imgur.com/BLtBNeO.jpg" alt=""></li>
</ul>
<ol>
<li><p>check extruder:<br>heat up extruder to 230C, load filament into extruder and extrude for 2 mins, check the flow status of extruded material to make sure extrution smoothly.<br><img src="http://i.imgur.com/pQ7ttYI.jpg" alt=""></p>
</li>
<li><p>check printing platform again to make sure its clean and has necessary surface tape attached.</p>
</li>
<li>start printing</li>
</ol>
<h1 id="Output-to-Cura-and-print"><a href="#Output-to-Cura-and-print" class="headerlink" title="Output to Cura and print"></a>Output to Cura and print</h1><p>We use the 3D Printer of Unimaker,it looks like Maker Pi M14.The Building Size is 140<em>140</em>140mm,the filament diameter is 1.75 mm and use the PLA materials.We can use the usb or SD card to send the gcode files.</p>
<p><img src="http://i.imgur.com/rhl1wYS.jpg" alt=""></p>
<p>This my printer setting<br><img src="http://i.imgur.com/njNZtxe.jpg" alt=""><br>It need 42 minutes to print.<br><img src="http://i.imgur.com/Oq7IPJR.jpg" alt=""></p>



<p>Wo! My first 3D design and production.  </p>
<p><a href="http://archive.fabacademy.org/archives/2016/fablabshenzhen/students/426/1download/MidiCube.stl.zip" target="_blank" rel="external">STL Download</a></p>
<p><img src="http://i.imgur.com/AO9FQlB.png" alt=""><br>This work is licensed under a <a href="http://creativecommons.org/licenses/by/4.0/" target="_blank" rel="external">Creative Commons Attribution 4.0 International License</a>.</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[3D Scanner]]></title>
      <url>http://myfly.vip/2016/02/24/3D-Scanner/</url>
      <content type="html"><![CDATA[
<a id="more"></a>
<h1 id="Download-software-from-3DSYSTEM-Sense"><a href="#Download-software-from-3DSYSTEM-Sense" class="headerlink" title="Download software from 3DSYSTEM Sense"></a>Download software from <a href="http://www.3dsystems.com/shop/sense/downloads" target="_blank" rel="external">3DSYSTEM Sense</a></h1>
<h1 id="First-I-try-to-scan-a-toy"><a href="#First-I-try-to-scan-a-toy" class="headerlink" title="First, I try to scan a toy"></a>First, I try to scan a toy</h1>
<h1 id="But-I-realized-the-toy-is-too-small"><a href="#But-I-realized-the-toy-is-too-small" class="headerlink" title="But I realized the toy is too small."></a>But I realized the toy is too small.</h1>
<h1 id="I-can’t-scan-anything"><a href="#I-can’t-scan-anything" class="headerlink" title="I can’t scan anything."></a>I can’t scan anything.</h1>
<h1 id="With-a-little-help-from-my-friends-I-scan-myself-finally"><a href="#With-a-little-help-from-my-friends-I-scan-myself-finally" class="headerlink" title="With a little help from my friends,I scan myself finally."></a>With a little help from my friends,I scan myself finally.</h1>
<p><a href="http://archive.fabacademy.org/archives/2016/fablabshenzhen/students/426/1download/MyfScan.stl.zip" target="_blank" rel="external">STL Download</a></p>
<p><img src="http://i.imgur.com/AO9FQlB.png" alt=""><br>This work is licensed under a <a href="http://creativecommons.org/licenses/by/4.0/" target="_blank" rel="external">Creative Commons Attribution 4.0 International License</a>.</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Board Milling and Fabisp]]></title>
      <url>http://myfly.vip/2016/02/17/boardmilling/</url>
      <content type="html"><![CDATA[<p><img src="http://i.imgur.com/RYzYPgy.jpg" alt=""><br><a id="more"></a></p>
<p>I use <a href="http://fab.cba.mit.edu/content/projects/fabispkey/index.html" target="_blank" rel="external">Andy’s Board</a>,it looks cool and useful.</p>
<h1 id="Open-the-Fabmoudule-and-Upload-the-PCB-files"><a href="#Open-the-Fabmoudule-and-Upload-the-PCB-files" class="headerlink" title="Open the Fabmoudule and Upload the PCB files."></a>Open the Fabmoudule and Upload the PCB files.</h1><p><img src="http://i.imgur.com/2EXpUYe.jpg" alt=""></p>
<h1 id="Setting-the-Output-files"><a href="#Setting-the-Output-files" class="headerlink" title="Setting the Output files"></a>Setting the Output files</h1><p><img src="http://i.imgur.com/fPwUVWb.jpg" alt=""></p>
<h1 id="Set-the-Origin-Point-and-start-to-mill"><a href="#Set-the-Origin-Point-and-start-to-mill" class="headerlink" title="Set the Origin Point and start to mill."></a>Set the Origin Point and start to mill.</h1><p><img src="http://i.imgur.com/7Zdy3ib.jpg" alt=""></p>
<h1 id="Clean-the-Board-and-Soildering"><a href="#Clean-the-Board-and-Soildering" class="headerlink" title="Clean the Board and Soildering"></a>Clean the Board and Soildering</h1><p><img src="http://i.imgur.com/RYzYPgy.jpg" alt=""></p>
<h1 id="Programming"><a href="#Programming" class="headerlink" title="Programming"></a>Programming</h1><p><img src="http://i.imgur.com/NahjmkX.jpg" alt=""></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div></pre></td><td class="code"><pre><div class="line">FelixtekiMacBook-Air:~ felix$ cd /Users/felix/Dropbox/Study/Fablab/Week4/Hello_ISP_44/fabISP_mac.0.8.2_firmware</div><div class="line">FelixtekiMacBook-Air:fabISP_mac.0.8.2_firmware felix$ make clean</div><div class="line">rm -f main.hex main.lst main.obj main.cof main.list main.map main.eep.hex main.elf *.o usbdrv/*.o main.s usbdrv/oddebug.s usbdrv/usbdrv.s</div><div class="line">FelixtekiMacBook-Air:fabISP_mac.0.8.2_firmware felix$ make hex</div><div class="line">avr-gcc -Wall -Os -DF_CPU=20000000	 -Iusbdrv -I. -DDEBUG_LEVEL=0 -mmcu=attiny44 -c usbdrv/usbdrv.c -o usbdrv/usbdrv.o</div><div class="line">avr-gcc -Wall -Os -DF_CPU=20000000	 -Iusbdrv -I. -DDEBUG_LEVEL=0 -mmcu=attiny44 -x assembler-with-cpp -c usbdrv/usbdrvasm.S -o usbdrv/usbdrvasm.o</div><div class="line">avr-gcc -Wall -Os -DF_CPU=20000000	 -Iusbdrv -I. -DDEBUG_LEVEL=0 -mmcu=attiny44 -c usbdrv/oddebug.c -o usbdrv/oddebug.o</div><div class="line">avr-gcc -Wall -Os -DF_CPU=20000000	 -Iusbdrv -I. -DDEBUG_LEVEL=0 -mmcu=attiny44 -c main.c -o main.o</div><div class="line">main.c:88:13: warning: always_inline function might not be inlinable [-Wattributes]</div><div class="line"> static void delay ( void )</div><div class="line">             ^</div><div class="line">avr-gcc -Wall -Os -DF_CPU=20000000	 -Iusbdrv -I. -DDEBUG_LEVEL=0 -mmcu=attiny44 -o main.elf usbdrv/usbdrv.o usbdrv/usbdrvasm.o usbdrv/oddebug.o main.o</div><div class="line">rm -f main.hex main.eep.hex</div><div class="line">avr-objcopy -j .text -j .data -O ihex main.elf main.hex</div><div class="line">avr-size main.hex</div><div class="line">   text	   data	    bss	    dec	    hex	filename</div><div class="line">      0	   2002	      0	   2002	    7d2	main.hex</div><div class="line">FelixtekiMacBook-Air:fabISP_mac.0.8.2_firmware felix$ make fuse</div><div class="line">avrdude -c usbtiny -p attiny44  -U hfuse:w:0xDF:m -U lfuse:w:0xFF:m</div><div class="line"></div><div class="line">avrdude: AVR device initialized and ready to accept instructions</div><div class="line"></div><div class="line">Reading | ################################################## | 100% 0.00s</div><div class="line"></div><div class="line">avrdude: Device signature = 0x1e9207</div><div class="line">avrdude: reading input file &quot;0xDF&quot;</div><div class="line">avrdude: writing hfuse (1 bytes):</div><div class="line"></div><div class="line">Writing | ################################################## | 100% 0.00s</div><div class="line"></div><div class="line">avrdude: 1 bytes of hfuse written</div><div class="line">avrdude: verifying hfuse memory against 0xDF:</div><div class="line">avrdude: load data hfuse data from input file 0xDF:</div><div class="line">avrdude: input file 0xDF contains 1 bytes</div><div class="line">avrdude: reading on-chip hfuse data:</div><div class="line"></div><div class="line">Reading | ################################################## | 100% 0.00s</div><div class="line"></div><div class="line">avrdude: verifying ...</div><div class="line">avrdude: 1 bytes of hfuse verified</div><div class="line">avrdude: reading input file &quot;0xFF&quot;</div><div class="line">avrdude: writing lfuse (1 bytes):</div><div class="line"></div><div class="line">Writing | ################################################## | 100% 0.00s</div><div class="line"></div><div class="line">avrdude: 1 bytes of lfuse written</div><div class="line">avrdude: verifying lfuse memory against 0xFF:</div><div class="line">avrdude: load data lfuse data from input file 0xFF:</div><div class="line">avrdude: input file 0xFF contains 1 bytes</div><div class="line">avrdude: reading on-chip lfuse data:</div><div class="line"></div><div class="line">Reading | ################################################## | 100% 0.00s</div><div class="line"></div><div class="line">avrdude: verifying ...</div><div class="line">avrdude: 1 bytes of lfuse verified</div><div class="line"></div><div class="line">avrdude: safemode: Fuses OK (H:FF, E:DF, L:FF)</div><div class="line"></div><div class="line">avrdude done.  Thank you.</div><div class="line"></div><div class="line">FelixtekiMacBook-Air:fabISP_mac.0.8.2_firmware felix$ make program</div><div class="line">avrdude -c usbtiny -p attiny44  -U flash:w:main.hex:i</div><div class="line"></div><div class="line">avrdude: AVR device initialized and ready to accept instructions</div><div class="line"></div><div class="line">Reading | ################################################## | 100% 0.00s</div><div class="line"></div><div class="line">avrdude: Device signature = 0x1e9207</div><div class="line">avrdude: NOTE: &quot;flash&quot; memory has been specified, an erase cycle will be performed</div><div class="line">         To disable this feature, specify the -D option.</div><div class="line">avrdude: erasing chip</div><div class="line">avrdude: reading input file &quot;main.hex&quot;</div><div class="line">avrdude: writing flash (2002 bytes):</div><div class="line"></div><div class="line">Writing | ################################################## | 100% 2.43s</div><div class="line"></div><div class="line">avrdude: 2002 bytes of flash written</div><div class="line">avrdude: verifying flash memory against main.hex:</div><div class="line">avrdude: load data flash data from input file main.hex:</div><div class="line">avrdude: input file main.hex contains 2002 bytes</div><div class="line">avrdude: reading on-chip flash data:</div><div class="line"></div><div class="line">Reading | ################################################## | 100% 3.85s</div><div class="line"></div><div class="line">avrdude: verifying ...</div><div class="line">avrdude: 2002 bytes of flash verified</div><div class="line"></div><div class="line">avrdude: safemode: Fuses OK (H:FF, E:DF, L:FF)</div><div class="line"></div><div class="line">avrdude done.  Thank you.</div><div class="line"></div><div class="line">avrdude -c usbtiny -p attiny44  -U hfuse:w:0xDF:m -U lfuse:w:0xFF:m</div><div class="line"></div><div class="line">avrdude: AVR device initialized and ready to accept instructions</div><div class="line"></div><div class="line">Reading | ################################################## | 100% 0.00s</div><div class="line"></div><div class="line">avrdude: Device signature = 0x1e9207</div><div class="line">avrdude: reading input file &quot;0xDF&quot;</div><div class="line">avrdude: writing hfuse (1 bytes):</div><div class="line"></div><div class="line">Writing | ################################################## | 100% 0.00s</div><div class="line"></div><div class="line">avrdude: 1 bytes of hfuse written</div><div class="line">avrdude: verifying hfuse memory against 0xDF:</div><div class="line">avrdude: load data hfuse data from input file 0xDF:</div><div class="line">avrdude: input file 0xDF contains 1 bytes</div><div class="line">avrdude: reading on-chip hfuse data:</div><div class="line"></div><div class="line">Reading | ################################################## | 100% 0.00s</div><div class="line"></div><div class="line">avrdude: verifying ...</div><div class="line">avrdude: 1 bytes of hfuse verified</div><div class="line">avrdude: reading input file &quot;0xFF&quot;</div><div class="line">avrdude: writing lfuse (1 bytes):</div><div class="line"></div><div class="line">Writing | ################################################## | 100% 0.00s</div><div class="line"></div><div class="line">avrdude: 1 bytes of lfuse written</div><div class="line">avrdude: verifying lfuse memory against 0xFF:</div><div class="line">avrdude: load data lfuse data from input file 0xFF:</div><div class="line">avrdude: input file 0xFF contains 1 bytes</div><div class="line">avrdude: reading on-chip lfuse data:</div><div class="line"></div><div class="line">Reading | ################################################## | 100% 0.00s</div><div class="line"></div><div class="line">avrdude: verifying ...</div><div class="line">avrdude: 1 bytes of lfuse verified</div><div class="line"></div><div class="line">avrdude: safemode: Fuses OK (H:FF, E:DF, L:FF)</div><div class="line"></div><div class="line">avrdude done.  Thank you.</div></pre></td></tr></table></figure>
<p>After I have programmed the board,I follow the instruction to remove the 0 ohm.<br>Then,we connect it to Computer,you will see it in System information.<br><img src="http://i.imgur.com/q6Jv2ln.jpg" alt=""><br>Now,it can download code to another board.</p>
<p><img src="http://i.imgur.com/AO9FQlB.png" alt=""><br>This work is licensed under a <a href="http://creativecommons.org/licenses/by/4.0/" target="_blank" rel="external">Creative Commons Attribution 4.0 International License</a>.</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Week 4]]></title>
      <url>http://myfly.vip/2016/02/17/Week4/</url>
      <content type="html"><![CDATA[<p><excerpt in="" index="" |="" 首页摘要=""></excerpt></p>
<h2 id="Electronics-Production"><a href="#Electronics-Production" class="headerlink" title="Electronics Production"></a>Electronics Production</h2><p><strong>Assignment</strong><br>make an in-circuit programmer</p>
<ul>
<li>notes</li>
<li><a href="http://archive.fabacademy.org/archives/2016/fablabshenzhen/students/426/2016/02/17/Use-an-Arduino-to-make-my-first-Fabisp/" target="_blank" rel="external">Use an Arduino to make my first Fabisp</a>
</li>
<li><a href="http://archive.fabacademy.org/archives/2016/fablabshenzhen/students/426/2016/02/17/boardmilling/" target="_blank" rel="external">Board milling</a>
</li>
</ul>
<p><img src="http://i.imgur.com/AO9FQlB.png" alt=""><br>This work is licensed under a <a href="http://creativecommons.org/licenses/by/4.0/" target="_blank" rel="external">Creative Commons Attribution 4.0 International License</a>.</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Use an Arduino to make my first Fabisp]]></title>
      <url>http://myfly.vip/2016/02/17/Use-an-Arduino-to-make-my-first-Fabisp/</url>
      <content type="html"><![CDATA[
<a id="more"></a>






<h1 id="to-be-continued"><a href="#to-be-continued" class="headerlink" title="to be continued"></a>to be continued</h1><p><img src="http://i.imgur.com/AO9FQlB.png" alt=""><br>This work is licensed under a <a href="http://creativecommons.org/licenses/by/4.0/" target="_blank" rel="external">Creative Commons Attribution 4.0 International License</a>.</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Week 3]]></title>
      <url>http://myfly.vip/2016/02/10/Week3/</url>
      <content type="html"><![CDATA[<p><excerpt in="" index="" |="" 首页摘要=""></excerpt></p>
<h2 id="Computer-Controlled-Cutting"><a href="#Computer-Controlled-Cutting" class="headerlink" title="Computer-Controlled Cutting"></a>Computer-Controlled Cutting</h2><p><strong>Assignment</strong></p>
<ol>
<li>cut something on the vinylcutter</li>
<li>design, make, and document a parametric press-fit construction kit</li>
</ol>
<ul>
<li><a href="http://archive.fabacademy.org/archives/2016/fablabshenzhen/students/426/2016/02/10/Cut-and-assemb-an-acrylic-ornament/" target="_blank" rel="external">Cut and assemb an acrylic ornament</a>
</li>
<li><a href="http://archive.fabacademy.org/archives/2016/fablabshenzhen/students/426/2016/02/10/papercube/" target="_blank" rel="external">Paper Cube</a>
</li>
</ul>
<p><img src="http://i.imgur.com/AO9FQlB.png" alt=""><br>This work is licensed under a <a href="http://creativecommons.org/licenses/by/4.0/" target="_blank" rel="external">Creative Commons Attribution 4.0 International License</a>.</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Cut and assemb an acrylic ornament]]></title>
      <url>http://myfly.vip/2016/02/10/Cut-and-assemb-an-acrylic-ornament/</url>
      <content type="html"><![CDATA[<p><excerpt in="" index="" |="" 首页摘要=""><br><br><a id="more"></a><br><br><br><br><br><br><br></excerpt></p>
<p><img src="http://i.imgur.com/AO9FQlB.png" alt=""><br>This work is licensed under a <a href="http://creativecommons.org/licenses/by/4.0/" target="_blank" rel="external">Creative Commons Attribution 4.0 International License</a>.</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Vinyl Cutter]]></title>
      <url>http://myfly.vip/2016/02/10/vinyl/</url>
      <content type="html"><![CDATA[<p>We have a vinyl cutter called GCC RXII60,so I try to design a logo to cut.</p>
<p>At first,I want to know how it work,so I just cut an “A”.<br><img src="http://i.imgur.com/PJkNJah.png" alt=""></p>
<p>We should set the line width to “hair”<br><img src="http://i.imgur.com/22Nfn4f.png" alt=""></p>
<p>Choose the machine type.<br><img src="http://i.imgur.com/V2E5PqG.png" alt=""></p>
<p>My design is on the bottom of the left,it cut on the botton of the right.<br><img src="http://i.imgur.com/dveyApo.jpg" alt=""></p>
<p>My Chinese name is Ma yufei(MYF),so I design this logo<br><img src="http://i.imgur.com/6tCLIyv.png" alt=""></p>
<p>Now,I can put it on my computer<br><img src="http://i.imgur.com/04aA4Cg.jpg" alt=""></p>
<p><img src="http://i.imgur.com/AO9FQlB.png" alt=""><br>This work is licensed under a <a href="http://creativecommons.org/licenses/by/4.0/" target="_blank" rel="external">Creative Commons Attribution 4.0 International License</a>.</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Paper Cube]]></title>
      <url>http://myfly.vip/2016/02/10/papercube/</url>
      <content type="html"><![CDATA[<p><img src="http://i.imgur.com/LAeGyvh.jpg" alt=""></p>
<a id="more"></a>
<p>This week,I try to use Fusion 360 to design a paper cube<br>The paper cube is press-fit kit,you can change the parameter to fit different paper.</p>
<h1 id="Set-Parameters"><a href="#Set-Parameters" class="headerlink" title="Set Parameters"></a>Set Parameters</h1><p><img src="http://i.imgur.com/jn5FOsJ.jpg" alt=""></p>
<h1 id="Draw-Construction-at-the-face-of-XZ"><a href="#Draw-Construction-at-the-face-of-XZ" class="headerlink" title="Draw Construction at the face of XZ"></a>Draw Construction at the face of XZ</h1><p><img src="http://i.imgur.com/14dLJOZ.jpg" alt=""></p>
<h1 id="Draw-the-trace-and-mirror"><a href="#Draw-the-trace-and-mirror" class="headerlink" title="Draw the trace and mirror"></a>Draw the trace and mirror</h1><p><img src="http://i.imgur.com/2EAyCzT.jpg" alt=""><br><img src="http://i.imgur.com/XomyOmW.jpg" alt=""></p>
<h1 id="Draw-the-trace-at-the-face-of-YZ"><a href="#Draw-the-trace-at-the-face-of-YZ" class="headerlink" title="Draw the trace at the face of YZ"></a>Draw the trace at the face of YZ</h1><p><img src="http://i.imgur.com/F7smMMP.jpg" alt=""></p>
<h1 id="Extrude-the-plane"><a href="#Extrude-the-plane" class="headerlink" title="Extrude the plane"></a>Extrude the plane</h1><p><img src="http://i.imgur.com/HiDXKH4.jpg" alt=""></p>
<h1 id="Copy-the-Object-and-put-it-toghter"><a href="#Copy-the-Object-and-put-it-toghter" class="headerlink" title="Copy the Object and put it toghter."></a>Copy the Object and put it toghter.</h1><p><img src="http://i.imgur.com/1sf3Ai9.jpg" alt=""></p>
<h1 id="Choose-the-Sketch-and-“Save-As-DXF”"><a href="#Choose-the-Sketch-and-“Save-As-DXF”" class="headerlink" title="Choose the Sketch and “Save As DXF”."></a>Choose the Sketch and “Save As DXF”.</h1><p><img src="http://i.imgur.com/mcRpCVT.png" alt=""></p>
<h1 id="Use-Coreldraw-to-import-the-DXF-file"><a href="#Use-Coreldraw-to-import-the-DXF-file" class="headerlink" title="Use Coreldraw to import the DXF file"></a>Use Coreldraw to import the DXF file</h1><p><img src="http://i.imgur.com/LSALBqG.jpg" alt=""></p>
<h1 id="Laser-Cutting-Setting"><a href="#Laser-Cutting-Setting" class="headerlink" title="Laser Cutting Setting"></a>Laser Cutting Setting</h1><p><img src="http://i.imgur.com/HLtE5h7.jpg" alt=""></p>
<h1 id="Use-the-Laser-Cutter"><a href="#Use-the-Laser-Cutter" class="headerlink" title="Use the Laser Cutter"></a>Use the Laser Cutter</h1><p><img src="http://i.imgur.com/Hzuol5y.gif" alt="lase"></p>
<h1 id="Put-it-toghter"><a href="#Put-it-toghter" class="headerlink" title="Put it toghter"></a>Put it toghter</h1><p><img src="http://i.imgur.com/LAeGyvh.jpg" alt=""></p>
<p>It work! But that’s too loose.</p>
<iframe src="https://myhub.autodesk360.com/ue290868d/shares/public/SH7f1edQT22b515c761e271d1120c07f29fa?mode=embed" width="[960]" height="[720]" frameborder="0" allowfullscreen></iframe>
<p>Download link: <a href="http://a360.co/1WUGwZs" target="_blank" rel="external">http://a360.co/1WUGwZs</a> .</p>
<p><img src="http://i.imgur.com/AO9FQlB.png" alt=""><br>This work is licensed under a <a href="http://creativecommons.org/licenses/by/4.0/" target="_blank" rel="external">Creative Commons Attribution 4.0 International License</a>.</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Week 2]]></title>
      <url>http://myfly.vip/2016/02/03/Week-2/</url>
      <content type="html"><![CDATA[<p><excerpt in="" index="" |="" 首页摘要=""></excerpt></p>
<h2 id="Computer-Aided-Design"><a href="#Computer-Aided-Design" class="headerlink" title="Computer-Aided Design"></a>Computer-Aided Design</h2><p><strong>Assignment</strong><br>Model (draw, render, animate, simulate, …) a possible final project, and post it on your class page with original 2D and 3D files.</p>
<ul>
<li><a href="http://archive.fabacademy.org/archives/2016/fablabshenzhen/students/426/2016/02/03/Sketch-a-prototype-with-GIMP/" target="_blank" rel="external">Sketch with GIMP</a></li>
<li><a href="http://archive.fabacademy.org/archives/2016/fablabshenzhen/students/426/2016/02/03/sketchup/" target="_blank" rel="external">Sketch with Sketchup</a>
</li>
</ul>
<p><img src="http://i.imgur.com/AO9FQlB.png" alt=""><br>This work is licensed under a <a href="http://creativecommons.org/licenses/by/4.0/" target="_blank" rel="external">Creative Commons Attribution 4.0 International License</a>.</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Sketch a prototype with GIMP]]></title>
      <url>http://myfly.vip/2016/02/03/Sketch-a-prototype-with-GIMP/</url>
      <content type="html"><![CDATA[
<a id="more"></a>
<ul>
<li>System:OS X EI Capitan</li>
<li>Resolution:1440x900</li>
</ul>
<h2 id="Method1-Sketching-just-by-mouse"><a href="#Method1-Sketching-just-by-mouse" class="headerlink" title="Method1:Sketching just by mouse."></a>Method1:Sketching just by mouse.</h2><p>1.Open “ File-&gt;New”,create a new image like below,<br></p>
<blockquote>
<p>PS:  ”300 ppi” can show more detail than the default ppi(72ppi).</p>
</blockquote>
<p>2.Create a transparency layer to sketch<br><br>3.Set the “Paintbrush”<br><br>4.Begin to sketch the prototype,but it looks bad.<br></p>
<h2 id="Method2-Sketching-by-tools"><a href="#Method2-Sketching-by-tools" class="headerlink" title="Method2: Sketching by tools."></a>Method2: Sketching by tools.</h2><p>1.Open your origin sketch as a background layer.<br>Open “File-&gt;Opens as Layer…”<br>You can use your freehand sketch or mouse sketch(the above image),I use my freehand sketch this time.<br><br>2.Create a transparency layer to sketch.<br><br>3.Set the “Background” Layer’s opacity lower.<br><br>4.Now,It looks darkness,we should create a new white background.<br><br>5.Open “Ink Tool” and set parameter.<br><br>6.Ink the “Linear” Layer and remove “Background” Layer after that.<br></p>
<h2 id="Method3-Use-“Paths-Tool”"><a href="#Method3-Use-“Paths-Tool”" class="headerlink" title="Method3:Use “Paths Tool”"></a>Method3:Use “Paths Tool”</h2><p>1.Open “ File-&gt;New”,create a new image like below,<br><br>2.Create a transparency layer to sketch.<br><br>3.Use “Paths Tool” ,”Bucket Fill Tool” and “Blend Tool”<br></p>
<p><a href="http://archive.fabacademy.org/archives/2016/fablabshenzhen/students/426/1download/GIMP.zip" target="_blank" rel="external">Download my GIMP Files </a></p>
<p><img src="http://i.imgur.com/AO9FQlB.png" alt=""><br>This work is licensed under a <a href="http://creativecommons.org/licenses/by/4.0/" target="_blank" rel="external">Creative Commons Attribution 4.0 International License</a>.</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Sketch with Sketchup]]></title>
      <url>http://myfly.vip/2016/02/03/sketchup/</url>
      <content type="html"><![CDATA[
<a id="more"></a>
<p>1.Select the temple “3D Printing - Millimeters”<br><br>2.Lock the “Makerbot Replicator 2X” frame<br>Right click-&gt;Lock<br><br>3.Tape measure<br>Choose the “Tape measure”,create two reference lines.<br><br><br><br><br><br><br><br><br><br><br><br><br></p>
<p><a href="http://archive.fabacademy.org/archives/2016/fablabshenzhen/students/426/1download/Sketchup.zip" target="_blank" rel="external">Download my Sketchup Files </a></p>
<p><img src="http://i.imgur.com/AO9FQlB.png" alt=""><br>This work is licensed under a <a href="http://creativecommons.org/licenses/by/4.0/" target="_blank" rel="external">Creative Commons Attribution 4.0 International License</a>.</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Week1]]></title>
      <url>http://myfly.vip/2016/01/27/Week1/</url>
      <content type="html"><![CDATA[<p><excerpt in="" index="" |="" 首页摘要=""></excerpt></p>
<h2 id="PRINCIPLES-AND-PRACTICES-PROJECT-MANAGEMENT"><a href="#PRINCIPLES-AND-PRACTICES-PROJECT-MANAGEMENT" class="headerlink" title="PRINCIPLES AND PRACTICES, PROJECT MANAGEMENT"></a>PRINCIPLES AND PRACTICES, PROJECT MANAGEMENT</h2><p><strong>Assignment</strong><br>Build a personal site describing you and your final project.<br>Plan and sketch a potential semester project and add it to your website.<br>Upload it to the class archive. Do a git tutorial.</p>
<ul>
<li><a href="http://archive.fabacademy.org/archives/2016/fablabshenzhen/students/426/2016/01/27/Make-a-website-with-Hexo/" target="_blank" rel="external">Make a website with Hexo</a></li>
<li><a href="http://archive.fabacademy.org/archives/2016/fablabshenzhen/students/426/2016/06/22/About-Me/" target="_blank" rel="external">About Me</a></li>
<li><a href="http://archive.fabacademy.org/archives/2016/fablabshenzhen/students/426/2016/01/27/My-Final-Project/" target="_blank" rel="external">My Final Project</a></li>
<li><a href="http://archive.fabacademy.org/archives/2016/fablabshenzhen/students/426/2016/01/27/Push-to-the-GitLab/" target="_blank" rel="external">Push to the GitLab</a>
<a id="more"></a>
<the rest="" of="" contents="" |="" 余下全文="">

</the></li>
</ul>
<p><img src="http://i.imgur.com/AO9FQlB.png" alt=""><br>This work is licensed under a <a href="http://creativecommons.org/licenses/by/4.0/" target="_blank" rel="external">Creative Commons Attribution 4.0 International License</a>.</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Make a website with Hexo]]></title>
      <url>http://myfly.vip/2016/01/27/Make-a-website-with-Hexo/</url>
      <content type="html"><![CDATA[
<p><strong>What is Hexo?</strong><br>Hexo is a fast, simple and powerful blog framework. You write posts in Markdown (or other languages) and Hexo generates static files with a beautiful theme in seconds.<br><strong>Why I Choose Hexo?</strong><br>I used to make websites by web framework(eg. Laravel,Thinkphp,Wordpress),but we can’t use any databases on Gitlab. So I had to find a way to make a static website without databases.<br>After trying HTML(write HTML without any framework),Jekyll and Hexo,I decided to use Hexo.Because I need a blog framwork system to write a simple and beautiful article for the long term.<br><a id="more"></a></p>
<hr>
<p><strong>Overview</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$ npm install hexo-cli -g</div><div class="line">$ hexo init blog</div><div class="line">$ cd blog</div><div class="line">$ npm install</div><div class="line">$ hexo server</div></pre></td></tr></table></figure></p>
<h1 id="Install-Hexo-on-your-PC"><a href="#Install-Hexo-on-your-PC" class="headerlink" title="Install Hexo on your PC"></a>Install Hexo on your PC</h1><p>Open your terminal,run the below code.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ npm install hexo-cli -g</div></pre></td></tr></table></figure></p>
<blockquote><h2 id="Error1-Permission"><a href="#Error1-Permission" class="headerlink" title="Error1:Permission"></a>Error1:Permission</h2><p>Bad luck in the beginning~</p>
<p>It’s said “Please try running this command again as root/Administrator”<br>So I add “sudo” at the command,</p>
<p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ sudo npm install hexo-cli -g</div></pre></td></tr></table></figure><br>There is Warning,but it’s succeed to install.</p>
</blockquote>
<h1 id="Create-a-Hexo-project"><a href="#Create-a-Hexo-project" class="headerlink" title="Create a Hexo project"></a>Create a Hexo project</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo init blog</div></pre></td></tr></table></figure>
<h1 id="Open-the-Hexo-project"><a href="#Open-the-Hexo-project" class="headerlink" title="Open the Hexo project"></a>Open the Hexo project</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ cd blog</div></pre></td></tr></table></figure>
<h1 id="Install-packages-for-Hexo-project"><a href="#Install-packages-for-Hexo-project" class="headerlink" title="Install packages for Hexo project"></a>Install packages for Hexo project</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ npm install</div></pre></td></tr></table></figure>
<h1 id="Run-the-Hexo-project"><a href="#Run-the-Hexo-project" class="headerlink" title="Run the Hexo project"></a>Run the Hexo project</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<blockquote><h2 id="Error2"><a href="#Error2" class="headerlink" title="Error2"></a>Error2</h2><p>Another Error!</p>
<p>So I searched the error on github,someone said <a href="https://github.com/hexojs/hexo/issues/1055" target="_blank" rel="external">click here</a></p>
<p>So I try to reinstall the hexo</p>
<p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ npm uninstall hexo</div><div class="line">$ npm install hexo –no-optional –save</div></pre></td></tr></table></figure><br>It works!</p>
</blockquote>
<h1 id="That’s-my-way-to-make-a-website-with-hexo"><a href="#That’s-my-way-to-make-a-website-with-hexo" class="headerlink" title="That’s my way to make a website with hexo"></a>That’s my way to make a website with hexo</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$ npm install hexo-cli -g</div><div class="line">$ hexo init blog</div><div class="line">$ cd blog</div><div class="line">$ npm install hexo --no-optional</div><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p><img src="http://i.imgur.com/AO9FQlB.png" alt=""><br>This work is licensed under a <a href="http://creativecommons.org/licenses/by/4.0/" target="_blank" rel="external">Creative Commons Attribution 4.0 International License</a>.</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[MIDI Cube]]></title>
      <url>http://myfly.vip/2016/01/27/midicube/</url>
      <content type="html"><![CDATA[<h1 id="What-I-have-done-before"><a href="#What-I-have-done-before" class="headerlink" title="What I have done before?"></a>What I have done before?</h1><div class="video-container"><iframe src="//player.vimeo.com/video/157309536" frameborder="0" allowfullscreen></iframe></div>
<p>You can remix the sound effect by turn the side of the cube.</p>
<p>I made it in my spare time and display in MakerFaire ShenZhen 2015  .<br>But after I get a Job, I stop the project for a long time.</p>
<a id="more"></a>
<h1 id="What-I-want-to-do-now"><a href="#What-I-want-to-do-now" class="headerlink" title="What I want to do now?"></a>What I want to do now?</h1><p>At last month, I want to reopen this project,I need more skills and knowledge,<br>so I decided to resign from my Job to take part in the Fab Academy 2016.</p>
<h1 id="How-to-do-it"><a href="#How-to-do-it" class="headerlink" title="How to do it?"></a>How to do it?</h1><p>At begin(Week 1),I try to design a cool shape for it like that.<br>After careful consideration,include “product manufacture”,”operate mode” and “User Search”, I decided to give up plan A(Week 1).<br>I will improve my origin Plan, the Midi Cube</p>


<h1 id="The-new-features-of-Midi-Cube"><a href="#The-new-features-of-Midi-Cube" class="headerlink" title="The new features of Midi Cube"></a>The new features of Midi Cube</h1><ol>
<li>RGB inside each side,change by the sound effect.</li>
<li>Press-button on each side,it can change the sound effect.</li>
<li>6DOF(MPU-6050),it was 3DOF(BMA250) before.</li>
<li>Bluetooth 4.1(nRF51822), it was bluetooth 4.0(Ti CC2541)before.</li>
<li>iOS App.</li>
<li>MIDI format，it was just remix sound files before.</li>
</ol>
<p><img src="http://i.imgur.com/AO9FQlB.png" alt=""><br>This work is licensed under a <a href="http://creativecommons.org/licenses/by/4.0/" target="_blank" rel="external">Creative Commons Attribution 4.0 International License</a>.</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[My Final Project(Expired)]]></title>
      <url>http://myfly.vip/2016/01/27/My-Final-Project/</url>
      <content type="html"><![CDATA[
<a id="more"></a>

]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Push to the GitLab]]></title>
      <url>http://myfly.vip/2016/01/27/Push-to-the-GitLab/</url>
      <content type="html"><![CDATA[<h1 id="4-step-to-push-my-website"><a href="#4-step-to-push-my-website" class="headerlink" title="4 step to push my website"></a>4 step to push my website</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ git clone http://git.fabacademy.org/fabacademy2016/fablabshenzhen.git</div><div class="line">$ git checkout -b myfeature</div><div class="line">$ git commit -am &quot;My feature is ready&quot;</div><div class="line">$ git push origin myfeature</div></pre></td></tr></table></figure>
<p><img src="http://i.imgur.com/AO9FQlB.png" alt=""><br>This work is licensed under a <a href="http://creativecommons.org/licenses/by/4.0/" target="_blank" rel="external">Creative Commons Attribution 4.0 International License</a>.</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[SugarTimerIntro]]></title>
      <url>http://myfly.vip/2016/01/27/SugarTimerIntro/</url>
      <content type="html"><![CDATA[<h1 id="Finial-Project-introduction"><a href="#Finial-Project-introduction" class="headerlink" title="Finial Project introduction"></a>Finial Project introduction</h1><p>I had changed finial project twice for a more funny project<br>My Evaluate project is Sugar Timer.</p>
<p>Sugar Timeris design for children ,adult can also use it, like me<br>I want make something can encourage me to work hard and study hard.<br>so I try to make a counter which can supervise you studying and working.<br>After you work for a while ,you will get a candy as a reward  </p>
<p>I also do some research about it<br>I use the <a href="https://www.leanstartupmachine.com/validationboard/" target="_blank" rel="external">Validationboard</a>,and I think it’s useful.<br><img src="http://i.imgur.com/GJMabkq.jpg" alt="SugarTimer.001"></p>
<p>Then,I draw some sketch<br><img src="http://i.imgur.com/ELHo6Le.jpg" alt="SugarTimer.002"><br><img src="http://i.imgur.com/YwZTLyw.jpg" alt="SugarTimer.003"></p>
<p><img src="http://i.imgur.com/AO9FQlB.png" alt=""><br>This work is licensed under a <a href="http://creativecommons.org/licenses/by/4.0/" target="_blank" rel="external">Creative Commons Attribution 4.0 International License</a>.</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[About Me]]></title>
      <url>http://myfly.vip/2015/01/27/About-Me/</url>
      <content type="html"><![CDATA[<p><excerpt in="" index="" |="" 首页摘要=""><br><br></excerpt></p>
]]></content>
    </entry>
    
  
  
</search>
